

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Aug 18 00:45:17 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F690
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37     0000                     
    38                           ; Version 2.40
    39                           ; Generated 17/11/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F690 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73     0000                     	;# 
    74     0001                     	;# 
    75     0002                     	;# 
    76     0003                     	;# 
    77     0004                     	;# 
    78     0005                     	;# 
    79     0006                     	;# 
    80     0007                     	;# 
    81     000A                     	;# 
    82     000B                     	;# 
    83     000C                     	;# 
    84     000D                     	;# 
    85     000E                     	;# 
    86     000E                     	;# 
    87     000F                     	;# 
    88     0010                     	;# 
    89     0011                     	;# 
    90     0012                     	;# 
    91     0013                     	;# 
    92     0014                     	;# 
    93     0015                     	;# 
    94     0015                     	;# 
    95     0016                     	;# 
    96     0017                     	;# 
    97     0018                     	;# 
    98     0019                     	;# 
    99     001A                     	;# 
   100     001C                     	;# 
   101     001D                     	;# 
   102     001E                     	;# 
   103     001F                     	;# 
   104     0081                     	;# 
   105     0085                     	;# 
   106     0086                     	;# 
   107     0087                     	;# 
   108     008C                     	;# 
   109     008D                     	;# 
   110     008E                     	;# 
   111     008F                     	;# 
   112     0090                     	;# 
   113     0092                     	;# 
   114     0093                     	;# 
   115     0093                     	;# 
   116     0093                     	;# 
   117     0094                     	;# 
   118     0095                     	;# 
   119     0095                     	;# 
   120     0096                     	;# 
   121     0096                     	;# 
   122     0097                     	;# 
   123     0098                     	;# 
   124     0099                     	;# 
   125     009A                     	;# 
   126     009B                     	;# 
   127     009E                     	;# 
   128     009F                     	;# 
   129     010C                     	;# 
   130     010C                     	;# 
   131     010D                     	;# 
   132     010E                     	;# 
   133     010F                     	;# 
   134     0115                     	;# 
   135     0116                     	;# 
   136     0118                     	;# 
   137     0119                     	;# 
   138     011A                     	;# 
   139     011B                     	;# 
   140     011E                     	;# 
   141     011F                     	;# 
   142     018C                     	;# 
   143     018D                     	;# 
   144     019D                     	;# 
   145     019E                     	;# 
   146     0000                     	;# 
   147     0001                     	;# 
   148     0002                     	;# 
   149     0003                     	;# 
   150     0004                     	;# 
   151     0005                     	;# 
   152     0006                     	;# 
   153     0007                     	;# 
   154     000A                     	;# 
   155     000B                     	;# 
   156     000C                     	;# 
   157     000D                     	;# 
   158     000E                     	;# 
   159     000E                     	;# 
   160     000F                     	;# 
   161     0010                     	;# 
   162     0011                     	;# 
   163     0012                     	;# 
   164     0013                     	;# 
   165     0014                     	;# 
   166     0015                     	;# 
   167     0015                     	;# 
   168     0016                     	;# 
   169     0017                     	;# 
   170     0018                     	;# 
   171     0019                     	;# 
   172     001A                     	;# 
   173     001C                     	;# 
   174     001D                     	;# 
   175     001E                     	;# 
   176     001F                     	;# 
   177     0081                     	;# 
   178     0085                     	;# 
   179     0086                     	;# 
   180     0087                     	;# 
   181     008C                     	;# 
   182     008D                     	;# 
   183     008E                     	;# 
   184     008F                     	;# 
   185     0090                     	;# 
   186     0092                     	;# 
   187     0093                     	;# 
   188     0093                     	;# 
   189     0093                     	;# 
   190     0094                     	;# 
   191     0095                     	;# 
   192     0095                     	;# 
   193     0096                     	;# 
   194     0096                     	;# 
   195     0097                     	;# 
   196     0098                     	;# 
   197     0099                     	;# 
   198     009A                     	;# 
   199     009B                     	;# 
   200     009E                     	;# 
   201     009F                     	;# 
   202     010C                     	;# 
   203     010C                     	;# 
   204     010D                     	;# 
   205     010E                     	;# 
   206     010F                     	;# 
   207     0115                     	;# 
   208     0116                     	;# 
   209     0118                     	;# 
   210     0119                     	;# 
   211     011A                     	;# 
   212     011B                     	;# 
   213     011E                     	;# 
   214     011F                     	;# 
   215     018C                     	;# 
   216     018D                     	;# 
   217     019D                     	;# 
   218     019E                     	;# 
   219                           
   220                           	psect	idataBANK0
   221     068C                     __pidataBANK0:
   222                           
   223                           ;initializer for _display
   224     068C  3401               	retlw	1
   225     068D  3402               	retlw	2
   226     068E  3403               	retlw	3
   227     068F  3404               	retlw	4
   228                           
   229                           ;initializer for _numberOfSamples
   230     0690  3401               	retlw	1
   231                           
   232                           	psect	strings
   233     0600                     __pstrings:
   234     0600                     stringtab:
   235     0600                     __stringtab:
   236     0600                     stringcode:	
   237                           ;	String table - string pointers are 1 byte each
   238                           
   239     0600                     stringdir:
   240     0600  3006               	movlw	high stringdir
   241     0601  008A               	movwf	10
   242     0602  0804               	movf	4,w
   243     0603  0A84               	incf	4,f
   244     0604  0782               	addwf	2,f
   245     0605                     __stringbase:
   246     0605  3400               	retlw	0
   247     0606                     __end_of__stringtab:
   248     0606                     _PULSES_PER_REV:
   249     0606  3403               	retlw	3
   250     0607  3400               	retlw	0
   251     0608  3404               	retlw	4
   252     0609  3400               	retlw	0
   253     060A  3405               	retlw	5
   254     060B  3400               	retlw	0
   255     060C  3406               	retlw	6
   256     060D  3400               	retlw	0
   257     060E  3401               	retlw	1
   258     060F  3400               	retlw	0
   259     0610                     __end_of_PULSES_PER_REV:
   260     0610                     _digits:
   261     0610  34C0               	retlw	192
   262     0611  34F9               	retlw	249
   263     0612  34A4               	retlw	164
   264     0613  34B0               	retlw	176
   265     0614  3499               	retlw	153
   266     0615  3492               	retlw	146
   267     0616  3482               	retlw	130
   268     0617  34F8               	retlw	248
   269     0618  3480               	retlw	128
   270     0619  3490               	retlw	144
   271     061A                     __end_of_digits:
   272     061A                     _indicators:
   273     061A  3410               	retlw	16
   274     061B  3408               	retlw	8
   275     061C  3401               	retlw	1
   276     061D  3420               	retlw	32
   277     061E  3402               	retlw	2
   278     061F                     __end_of_indicators:
   279                           
   280                           	psect	nvBANK1
   281     00B2                     __pnvBANK1:
   282     00B2                     _selectedIndicator:
   283     00B2                     	ds	2
   284     0015                     _CCPR	set	21
   285     000E                     _TMR1	set	14
   286     0001                     _TMR0	set	1
   287     0006                     _PORTBbits	set	6
   288     0005                     _PORTAbits	set	5
   289     0007                     _PORTCbits	set	7
   290     0010                     _T1CONbits	set	16
   291     000B                     _INTCONbits	set	11
   292     000C                     _PIR1bits	set	12
   293     0017                     _CCP1CONbits	set	23
   294     0060                     _TMR1IF	set	96
   295     0081                     _OPTION_REGbits	set	129
   296     008C                     _PIE1bits	set	140
   297     008F                     _OSCCONbits	set	143
   298     0087                     _TRISC	set	135
   299     0086                     _TRISB	set	134
   300     0085                     _TRISA	set	133
   301     010C                     _EEDATA	set	268
   302     010D                     _EEADR	set	269
   303     011F                     _ANSELH	set	287
   304     011E                     _ANSEL	set	286
   305     018D                     _EECON2	set	397
   306     018C                     _EECON1bits	set	396
   307                           
   308                           	psect	cinit
   309     0013                     start_initialization:	
   310                           ; #config settings
   311                           
   312     0013                     __initialization:
   313                           
   314                           ; Initialize objects allocated to BANK0
   315     0013  118A  268C  118A   	fcall	__pidataBANK0	;fetch initializer
   316     0016  00D7               	movwf	__pdataBANK0& (0+127)
   317     0017  118A  268D  118A   	fcall	__pidataBANK0+1	;fetch initializer
   318     001A  00D8               	movwf	(__pdataBANK0+1)& (0+127)
   319     001B  118A  268E  118A   	fcall	__pidataBANK0+2	;fetch initializer
   320     001E  00D9               	movwf	(__pdataBANK0+2)& (0+127)
   321     001F  118A  268F  118A   	fcall	__pidataBANK0+3	;fetch initializer
   322     0022  00DA               	movwf	(__pdataBANK0+3)& (0+127)
   323     0023  118A  2690  118A   	fcall	__pidataBANK0+4	;fetch initializer
   324     0026  00DB               	movwf	(__pdataBANK0+4)& (0+127)
   325                           
   326                           ; Clear objects allocated to BANK1
   327     0027  1683               	bsf	3,5	;RP0=1, select bank1
   328     0028  1303               	bcf	3,6	;RP1=0, select bank1
   329     0029  01B4               	clrf	__pbssBANK1& (0+127)
   330     002A  01B5               	clrf	(__pbssBANK1+1)& (0+127)
   331                           
   332                           ; Clear objects allocated to BANK0
   333     002B  1283               	bcf	3,5	;RP0=0, select bank0
   334     002C  1303               	bcf	3,6	;RP1=0, select bank0
   335     002D  01CE               	clrf	__pbssBANK0& (0+127)
   336     002E  01CF               	clrf	(__pbssBANK0+1)& (0+127)
   337     002F  01D0               	clrf	(__pbssBANK0+2)& (0+127)
   338     0030  01D1               	clrf	(__pbssBANK0+3)& (0+127)
   339     0031  01D2               	clrf	(__pbssBANK0+4)& (0+127)
   340     0032  01D3               	clrf	(__pbssBANK0+5)& (0+127)
   341     0033  01D4               	clrf	(__pbssBANK0+6)& (0+127)
   342     0034  01D5               	clrf	(__pbssBANK0+7)& (0+127)
   343     0035  01D6               	clrf	(__pbssBANK0+8)& (0+127)
   344     0036                     end_of_initialization:	
   345                           ;End of C runtime variable initialization code
   346                           
   347     0036                     __end_of__initialization:
   348     0036  0183               	clrf	3
   349     0037  118A  2BD0         	ljmp	_main	;jump to C main() function
   350                           
   351                           	psect	bssBANK0
   352     004E                     __pbssBANK0:
   353     004E                     _period:
   354     004E                     	ds	4
   355     0052                     ISR@initialCapture:
   356     0052                     	ds	2
   357     0054                     latchDisplay@turn:
   358     0054                     	ds	2
   359     0056                     checkSelectorToggle@lastState:
   360     0056                     	ds	1
   361                           
   362                           	psect	dataBANK0
   363     0057                     __pdataBANK0:
   364     0057                     _display:
   365     0057                     	ds	4
   366     005B                     _numberOfSamples:
   367     005B                     	ds	1
   368                           
   369                           	psect	bssBANK1
   370     00B4                     __pbssBANK1:
   371     00B4                     _shouldUpdate:
   372     00B4                     	ds	1
   373     00B5                     _overflow_count:
   374     00B5                     	ds	1
   375                           
   376                           	psect	cstackBANK1
   377     00A0                     __pcstackBANK1:
   378     00A0                     ___lldiv@quotient:
   379                           
   380                           ; 4 bytes @ 0x0
   381     00A0                     	ds	4
   382     00A4                     ___lldiv@counter:
   383                           
   384                           ; 1 bytes @ 0x4
   385     00A4                     	ds	1
   386     00A5                     ??_calculateRPM:
   387                           
   388                           ; 1 bytes @ 0x5
   389     00A5                     	ds	7
   390     00AC                     ?_setDisplay:
   391     00AC                     setDisplay@value:	
   392                           ; 1 bytes @ 0xC
   393                           
   394                           
   395                           ; 2 bytes @ 0xC
   396     00AC                     	ds	2
   397     00AE                     setDisplay@i:
   398                           
   399                           ; 2 bytes @ 0xE
   400     00AE                     	ds	2
   401     00B0                     main@delayCount:
   402                           
   403                           ; 2 bytes @ 0x10
   404     00B0                     	ds	2
   405                           
   406                           	psect	cstackCOMMON
   407     0070                     __pcstackCOMMON:
   408     0070                     ?_checkSelectorToggle:
   409     0070                     ?_initializeIOs:	
   410                           ; 1 bytes @ 0x0
   411                           
   412     0070                     ?_CCP1_Initialize:	
   413                           ; 1 bytes @ 0x0
   414                           
   415     0070                     ?_TMR0_Initialize:	
   416                           ; 1 bytes @ 0x0
   417                           
   418     0070                     ?_TMR1_Initialize:	
   419                           ; 1 bytes @ 0x0
   420                           
   421     0070                     ?_latchDisplay:	
   422                           ; 1 bytes @ 0x0
   423                           
   424     0070                     ??_latchDisplay:	
   425                           ; 1 bytes @ 0x0
   426                           
   427     0070                     ?_main:	
   428                           ; 1 bytes @ 0x0
   429                           
   430     0070                     ?_ISR:	
   431                           ; 1 bytes @ 0x0
   432                           
   433     0070                     ?i1___lmul:	
   434                           ; 1 bytes @ 0x0
   435                           
   436     0070                     ?i1___lldiv:	
   437                           ; 4 bytes @ 0x0
   438                           
   439     0070                     i1___lmul@multiplier:	
   440                           ; 4 bytes @ 0x0
   441                           
   442     0070                     i1___lldiv@divisor:	
   443                           ; 4 bytes @ 0x0
   444                           
   445                           
   446                           ; 4 bytes @ 0x0
   447     0070                     	ds	2
   448     0072                     latchDisplay@value:
   449                           
   450                           ; 1 bytes @ 0x2
   451     0072                     	ds	2
   452     0074                     i1___lmul@multiplicand:
   453     0074                     i1___lldiv@dividend:	
   454                           ; 4 bytes @ 0x4
   455                           
   456                           
   457                           ; 4 bytes @ 0x4
   458     0074                     	ds	4
   459     0078                     ??i1___lmul:
   460     0078                     ??i1___lldiv:	
   461                           ; 1 bytes @ 0x8
   462                           
   463                           
   464                           ; 1 bytes @ 0x8
   465     0078                     	ds	1
   466     0079                     i1___lmul@product:
   467     0079                     i1___lldiv@quotient:	
   468                           ; 4 bytes @ 0x9
   469                           
   470                           
   471                           ; 4 bytes @ 0x9
   472     0079                     	ds	4
   473     007D                     i1___lldiv@counter:
   474                           
   475                           ; 1 bytes @ 0xD
   476     007D                     	ds	1
   477                           
   478                           	psect	cstackBANK0
   479     0020                     __pcstackBANK0:
   480     0020                     ?_setNumberOfSamples:
   481     0020                     setNumberOfSamples@period:	
   482                           ; 1 bytes @ 0x0
   483                           
   484                           
   485                           ; 4 bytes @ 0x0
   486     0020                     	ds	4
   487     0024                     setNumberOfSamples@samples:
   488                           
   489                           ; 2 bytes @ 0x4
   490     0024                     	ds	2
   491     0026                     ??_setNumberOfSamples:
   492                           
   493                           ; 1 bytes @ 0x6
   494     0026                     	ds	2
   495     0028                     ??_ISR:
   496                           
   497                           ; 1 bytes @ 0x8
   498     0028                     	ds	12
   499     0034                     ??_initializeIOs:
   500     0034                     ??_CCP1_Initialize:	
   501                           ; 1 bytes @ 0x14
   502                           
   503     0034                     ??_TMR0_Initialize:	
   504                           ; 1 bytes @ 0x14
   505                           
   506     0034                     ??_TMR1_Initialize:	
   507                           ; 1 bytes @ 0x14
   508                           
   509     0034                     ?_writeToEEPROM:	
   510                           ; 1 bytes @ 0x14
   511                           
   512     0034                     ?_readFromEEPROM:	
   513                           ; 1 bytes @ 0x14
   514                           
   515     0034                     ?___lwdiv:	
   516                           ; 2 bytes @ 0x14
   517                           
   518     0034                     ?___lwmod:	
   519                           ; 2 bytes @ 0x14
   520                           
   521     0034                     ?___lmul:	
   522                           ; 2 bytes @ 0x14
   523                           
   524     0034                     writeToEEPROM@data:	
   525                           ; 4 bytes @ 0x14
   526                           
   527     0034                     ___lwdiv@divisor:	
   528                           ; 2 bytes @ 0x14
   529                           
   530     0034                     ___lwmod@divisor:	
   531                           ; 2 bytes @ 0x14
   532                           
   533     0034                     ___lmul@multiplier:	
   534                           ; 2 bytes @ 0x14
   535                           
   536                           
   537                           ; 4 bytes @ 0x14
   538     0034                     	ds	2
   539     0036                     ??_writeToEEPROM:
   540     0036                     ??_readFromEEPROM:	
   541                           ; 1 bytes @ 0x16
   542                           
   543     0036                     writeToEEPROM@address:	
   544                           ; 1 bytes @ 0x16
   545                           
   546     0036                     ___lwdiv@dividend:	
   547                           ; 1 bytes @ 0x16
   548                           
   549     0036                     ___lwmod@dividend:	
   550                           ; 2 bytes @ 0x16
   551                           
   552                           
   553                           ; 2 bytes @ 0x16
   554     0036                     	ds	1
   555     0037                     ??_checkSelectorToggle:
   556                           
   557                           ; 1 bytes @ 0x17
   558     0037                     	ds	1
   559     0038                     ??___lwdiv:
   560     0038                     ??___lwmod:	
   561                           ; 1 bytes @ 0x18
   562                           
   563     0038                     readFromEEPROM@data:	
   564                           ; 1 bytes @ 0x18
   565                           
   566     0038                     ___lmul@multiplicand:	
   567                           ; 2 bytes @ 0x18
   568                           
   569                           
   570                           ; 4 bytes @ 0x18
   571     0038                     	ds	1
   572     0039                     ___lwmod@counter:
   573     0039                     ___lwdiv@quotient:	
   574                           ; 1 bytes @ 0x19
   575                           
   576                           
   577                           ; 2 bytes @ 0x19
   578     0039                     	ds	1
   579     003A                     readFromEEPROM@address:
   580                           
   581                           ; 1 bytes @ 0x1A
   582     003A                     	ds	1
   583     003B                     ___lwdiv@counter:
   584                           
   585                           ; 1 bytes @ 0x1B
   586     003B                     	ds	1
   587     003C                     ??___lmul:
   588                           
   589                           ; 1 bytes @ 0x1C
   590     003C                     	ds	1
   591     003D                     ___lmul@product:
   592                           
   593                           ; 4 bytes @ 0x1D
   594     003D                     	ds	4
   595     0041                     ?___lldiv:
   596     0041                     ___lldiv@divisor:	
   597                           ; 4 bytes @ 0x21
   598                           
   599                           
   600                           ; 4 bytes @ 0x21
   601     0041                     	ds	4
   602     0045                     ___lldiv@dividend:
   603                           
   604                           ; 4 bytes @ 0x25
   605     0045                     	ds	4
   606     0049                     ??___lldiv:
   607                           
   608                           ; 1 bytes @ 0x29
   609     0049                     	ds	1
   610     004A                     ?_calculateRPM:
   611                           
   612                           ; 2 bytes @ 0x2A
   613     004A                     	ds	2
   614     004C                     calculateRPM@rpm:
   615                           
   616                           ; 2 bytes @ 0x2C
   617     004C                     	ds	2
   618     004E                     ??_setDisplay:
   619     004E                     ??_main:	
   620                           ; 1 bytes @ 0x2E
   621                           
   622                           
   623                           	psect	maintext
   624     03D0                     __pmaintext:	
   625                           ; 1 bytes @ 0x2E
   626 ;;
   627 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   628 ;;
   629 ;; *************** function _main *****************
   630 ;; Defined at:
   631 ;;		line 39 in file "main.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;  delayCount      2   16[BANK1 ] int 
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   640 ;; Tracked objects:
   641 ;;		On entry : B00/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   645 ;;      Params:         0       0       0       0
   646 ;;      Locals:         0       0       2       0
   647 ;;      Temps:          0       0       0       0
   648 ;;      Totals:         0       0       2       0
   649 ;;Total ram usage:        2 bytes
   650 ;; Hardware stack levels required when called: 5
   651 ;; This function calls:
   652 ;;		_CCP1_Initialize
   653 ;;		_TMR0_Initialize
   654 ;;		_TMR1_Initialize
   655 ;;		_calculateRPM
   656 ;;		_checkSelectorToggle
   657 ;;		_initializeIOs
   658 ;;		_readFromEEPROM
   659 ;;		_setDisplay
   660 ;; This function is called by:
   661 ;;		Startup code after reset
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665     03D0                     _main:	
   666                           ;psect for function _main
   667                           
   668     03D0                     l1494:	
   669                           ;incstack = 0
   670                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   671                           
   672                           
   673                           ;main.c: 41:     initializeIOs();
   674     03D0  118A  2654  118A   	fcall	_initializeIOs
   675                           
   676                           ;main.c: 42:     CCP1_Initialize();
   677     03D3  118A  2674  118A   	fcall	_CCP1_Initialize
   678                           
   679                           ;main.c: 43:     TMR1_Initialize();
   680     03D6  118A  2665  118A   	fcall	_TMR1_Initialize
   681                           
   682                           ;main.c: 44:     TMR0_Initialize();
   683     03D9  118A  2681  118A   	fcall	_TMR0_Initialize
   684     03DC                     l1496:
   685                           
   686                           ;main.c: 47:     selectedIndicator = readFromEEPROM(1);
   687     03DC  3001               	movlw	1
   688     03DD  118A  263A  118A   	fcall	_readFromEEPROM
   689     03E0  1283               	bcf	3,5	;RP0=0, select bank0
   690     03E1  1303               	bcf	3,6	;RP1=0, select bank0
   691     03E2  0835               	movf	?_readFromEEPROM+1,w
   692     03E3  1683               	bsf	3,5	;RP0=1, select bank1
   693     03E4  1303               	bcf	3,6	;RP1=0, select bank1
   694     03E5  00B3               	movwf	(_selectedIndicator+1)^(0+128)
   695     03E6  1283               	bcf	3,5	;RP0=0, select bank0
   696     03E7  1303               	bcf	3,6	;RP1=0, select bank0
   697     03E8  0834               	movf	?_readFromEEPROM,w
   698     03E9  1683               	bsf	3,5	;RP0=1, select bank1
   699     03EA  1303               	bcf	3,6	;RP1=0, select bank1
   700     03EB  00B2               	movwf	_selectedIndicator^(0+128)
   701     03EC                     l1498:
   702                           
   703                           ;main.c: 49:     if(selectedIndicator == 255)
   704     03EC  0A32               	incf	_selectedIndicator^(0+128),w
   705     03ED  0433               	iorwf	(_selectedIndicator+1)^(0+128),w
   706     03EE  1D03               	btfss	3,2
   707     03EF  2BF1               	goto	u1481
   708     03F0  2BF2               	goto	u1480
   709     03F1                     u1481:
   710     03F1  2BF4               	goto	l119
   711     03F2                     u1480:
   712     03F2                     l1500:
   713                           
   714                           ;main.c: 50:         selectedIndicator = 0;
   715     03F2  01B2               	clrf	_selectedIndicator^(0+128)
   716     03F3  01B3               	clrf	(_selectedIndicator+1)^(0+128)
   717     03F4                     l119:
   718                           
   719                           ;main.c: 52:     int delayCount = 0;
   720     03F4  01B0               	clrf	main@delayCount^(0+128)
   721     03F5  01B1               	clrf	(main@delayCount+1)^(0+128)
   722     03F6                     l1502:
   723                           
   724                           ;main.c: 57:         if(++delayCount == 20000)
   725     03F6  3001               	movlw	1
   726     03F7  1683               	bsf	3,5	;RP0=1, select bank1
   727     03F8  1303               	bcf	3,6	;RP1=0, select bank1
   728     03F9  07B0               	addwf	main@delayCount^(0+128),f
   729     03FA  1803               	skipnc
   730     03FB  0AB1               	incf	(main@delayCount+1)^(0+128),f
   731     03FC  3000               	movlw	0
   732     03FD  07B1               	addwf	(main@delayCount+1)^(0+128),f
   733     03FE  3020               	movlw	32
   734     03FF  0630               	xorwf	main@delayCount^(0+128),w
   735     0400  304E               	movlw	78
   736     0401  1903               	skipnz
   737     0402  0631               	xorwf	(main@delayCount+1)^(0+128),w
   738     0403  1D03               	btfss	3,2
   739     0404  2C06               	goto	u1491
   740     0405  2C07               	goto	u1490
   741     0406                     u1491:
   742     0406  2C39               	goto	l1516
   743     0407                     u1490:
   744     0407                     l1504:
   745                           
   746                           ;main.c: 58:         {;main.c: 59:             delayCount = 0;
   747     0407  01B0               	clrf	main@delayCount^(0+128)
   748     0408  01B1               	clrf	(main@delayCount+1)^(0+128)
   749     0409                     l1506:
   750                           
   751                           ;main.c: 62:             if(overflow_count < 5)
   752     0409  3005               	movlw	5
   753     040A  0235               	subwf	_overflow_count^(0+128),w
   754     040B  1803               	skipnc
   755     040C  2C0E               	goto	u1501
   756     040D  2C0F               	goto	u1500
   757     040E                     u1501:
   758     040E  2C27               	goto	l1512
   759     040F                     u1500:
   760     040F                     l1508:
   761                           
   762                           ;main.c: 63:             {;main.c: 64:                 if(shouldUpdate)
   763     040F  0834               	movf	_shouldUpdate^(0+128),w
   764     0410  1903               	btfsc	3,2
   765     0411  2C13               	goto	u1511
   766     0412  2C14               	goto	u1510
   767     0413                     u1511:
   768     0413  2C39               	goto	l1516
   769     0414                     u1510:
   770     0414                     l1510:
   771                           
   772                           ;main.c: 65:                     setDisplay(calculateRPM());
   773     0414  118A  22ED  118A   	fcall	_calculateRPM
   774     0417  1283               	bcf	3,5	;RP0=0, select bank0
   775     0418  1303               	bcf	3,6	;RP1=0, select bank0
   776     0419  084B               	movf	?_calculateRPM+1,w
   777     041A  1683               	bsf	3,5	;RP0=1, select bank1
   778     041B  1303               	bcf	3,6	;RP1=0, select bank1
   779     041C  00AD               	movwf	(setDisplay@value+1)^(0+128)
   780     041D  1283               	bcf	3,5	;RP0=0, select bank0
   781     041E  1303               	bcf	3,6	;RP1=0, select bank0
   782     041F  084A               	movf	?_calculateRPM,w
   783     0420  1683               	bsf	3,5	;RP0=1, select bank1
   784     0421  1303               	bcf	3,6	;RP1=0, select bank1
   785     0422  00AC               	movwf	setDisplay@value^(0+128)
   786     0423  118A  2275  118A   	fcall	_setDisplay
   787     0426  2C39               	goto	l1516
   788     0427                     l1512:
   789                           
   790                           ;main.c: 68:             {;main.c: 69:               period = 0;
   791     0427  3000               	movlw	0
   792     0428  1283               	bcf	3,5	;RP0=0, select bank0
   793     0429  1303               	bcf	3,6	;RP1=0, select bank0
   794     042A  00D1               	movwf	_period+3
   795     042B  3000               	movlw	0
   796     042C  00D0               	movwf	_period+2
   797     042D  3000               	movlw	0
   798     042E  00CF               	movwf	_period+1
   799     042F  3000               	movlw	0
   800     0430  00CE               	movwf	_period
   801     0431                     l1514:
   802                           
   803                           ;main.c: 70:               setDisplay(0);
   804     0431  3000               	movlw	0
   805     0432  1683               	bsf	3,5	;RP0=1, select bank1
   806     0433  1303               	bcf	3,6	;RP1=0, select bank1
   807     0434  00AC               	movwf	setDisplay@value^(0+128)
   808     0435  00AD               	movwf	(setDisplay@value+1)^(0+128)
   809     0436  118A  2275  118A   	fcall	_setDisplay
   810     0439                     l1516:
   811                           
   812                           ;main.c: 74:         checkSelectorToggle();
   813     0439  118A  25B5  118A   	fcall	_checkSelectorToggle
   814     043C  2BF6               	goto	l1502
   815     043D  118A  2811         	ljmp	start
   816     043F                     __end_of_main:
   817                           
   818                           	psect	text1
   819     0275                     __ptext1:	
   820 ;; *************** function _setDisplay *****************
   821 ;; Defined at:
   822 ;;		line 101 in file "./display.h"
   823 ;; Parameters:    Size  Location     Type
   824 ;;  value           2   12[BANK1 ] unsigned int 
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  i               2   14[BANK1 ] int 
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      void 
   829 ;; Registers used:
   830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   836 ;;      Params:         0       0       2       0
   837 ;;      Locals:         0       0       2       0
   838 ;;      Temps:          0       0       0       0
   839 ;;      Totals:         0       0       4       0
   840 ;;Total ram usage:        4 bytes
   841 ;; Hardware stack levels used: 1
   842 ;; Hardware stack levels required when called: 4
   843 ;; This function calls:
   844 ;;		___lwdiv
   845 ;;		___lwmod
   846 ;; This function is called by:
   847 ;;		_main
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851     0275                     _setDisplay:	
   852                           ;psect for function _setDisplay
   853                           
   854     0275                     l1468:	
   855                           ;incstack = 0
   856                           ; Regs used in _setDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   857                           
   858                           
   859                           ;./display.h: 102:     while (value >= 10000) {
   860     0275  2A97               	goto	l1472
   861     0276                     l1470:
   862                           
   863                           ;./display.h: 103:         value = value / 10;
   864     0276  300A               	movlw	10
   865     0277  1283               	bcf	3,5	;RP0=0, select bank0
   866     0278  1303               	bcf	3,6	;RP1=0, select bank0
   867     0279  00B4               	movwf	___lwdiv@divisor
   868     027A  3000               	movlw	0
   869     027B  00B5               	movwf	___lwdiv@divisor+1
   870     027C  1683               	bsf	3,5	;RP0=1, select bank1
   871     027D  1303               	bcf	3,6	;RP1=0, select bank1
   872     027E  082D               	movf	(setDisplay@value+1)^(0+128),w
   873     027F  1283               	bcf	3,5	;RP0=0, select bank0
   874     0280  1303               	bcf	3,6	;RP1=0, select bank0
   875     0281  00B7               	movwf	___lwdiv@dividend+1
   876     0282  1683               	bsf	3,5	;RP0=1, select bank1
   877     0283  1303               	bcf	3,6	;RP1=0, select bank1
   878     0284  082C               	movf	setDisplay@value^(0+128),w
   879     0285  1283               	bcf	3,5	;RP0=0, select bank0
   880     0286  1303               	bcf	3,6	;RP1=0, select bank0
   881     0287  00B6               	movwf	___lwdiv@dividend
   882     0288  118A  24ED  118A   	fcall	___lwdiv
   883     028B  1283               	bcf	3,5	;RP0=0, select bank0
   884     028C  1303               	bcf	3,6	;RP1=0, select bank0
   885     028D  0835               	movf	?___lwdiv+1,w
   886     028E  1683               	bsf	3,5	;RP0=1, select bank1
   887     028F  1303               	bcf	3,6	;RP1=0, select bank1
   888     0290  00AD               	movwf	(setDisplay@value+1)^(0+128)
   889     0291  1283               	bcf	3,5	;RP0=0, select bank0
   890     0292  1303               	bcf	3,6	;RP1=0, select bank0
   891     0293  0834               	movf	?___lwdiv,w
   892     0294  1683               	bsf	3,5	;RP0=1, select bank1
   893     0295  1303               	bcf	3,6	;RP1=0, select bank1
   894     0296  00AC               	movwf	setDisplay@value^(0+128)
   895     0297                     l1472:
   896                           
   897                           ;./display.h: 102:     while (value >= 10000) {
   898     0297  3027               	movlw	39
   899     0298  1683               	bsf	3,5	;RP0=1, select bank1
   900     0299  1303               	bcf	3,6	;RP1=0, select bank1
   901     029A  022D               	subwf	(setDisplay@value+1)^(0+128),w
   902     029B  3010               	movlw	16
   903     029C  1903               	skipnz
   904     029D  022C               	subwf	setDisplay@value^(0+128),w
   905     029E  1803               	skipnc
   906     029F  2AA1               	goto	u1461
   907     02A0  2AA2               	goto	u1460
   908     02A1                     u1461:
   909     02A1  2A76               	goto	l1470
   910     02A2                     u1460:
   911     02A2                     l1474:
   912                           
   913                           ;./display.h: 106:     for (int i = 3; i >= 0; i--) {
   914     02A2  3003               	movlw	3
   915     02A3  00AE               	movwf	setDisplay@i^(0+128)
   916     02A4  3000               	movlw	0
   917     02A5  00AF               	movwf	(setDisplay@i^(0+128)+1)
   918     02A6                     l1480:
   919                           
   920                           ;./display.h: 107:         display[i] = value % 10;
   921     02A6  082E               	movf	setDisplay@i^(0+128),w
   922     02A7  3E57               	addlw	(low (_display| 0))& (0+255)
   923     02A8  0084               	movwf	4
   924     02A9  300A               	movlw	10
   925     02AA  1283               	bcf	3,5	;RP0=0, select bank0
   926     02AB  1303               	bcf	3,6	;RP1=0, select bank0
   927     02AC  00B4               	movwf	___lwmod@divisor
   928     02AD  3000               	movlw	0
   929     02AE  00B5               	movwf	___lwmod@divisor+1
   930     02AF  1683               	bsf	3,5	;RP0=1, select bank1
   931     02B0  1303               	bcf	3,6	;RP1=0, select bank1
   932     02B1  082D               	movf	(setDisplay@value+1)^(0+128),w
   933     02B2  1283               	bcf	3,5	;RP0=0, select bank0
   934     02B3  1303               	bcf	3,6	;RP1=0, select bank0
   935     02B4  00B7               	movwf	___lwmod@dividend+1
   936     02B5  1683               	bsf	3,5	;RP0=1, select bank1
   937     02B6  1303               	bcf	3,6	;RP1=0, select bank1
   938     02B7  082C               	movf	setDisplay@value^(0+128),w
   939     02B8  1283               	bcf	3,5	;RP0=0, select bank0
   940     02B9  1303               	bcf	3,6	;RP1=0, select bank0
   941     02BA  00B6               	movwf	___lwmod@dividend
   942     02BB  118A  2579  118A   	fcall	___lwmod
   943     02BE  1283               	bcf	3,5	;RP0=0, select bank0
   944     02BF  1303               	bcf	3,6	;RP1=0, select bank0
   945     02C0  0834               	movf	?___lwmod,w
   946     02C1  1383               	bcf	3,7	;select IRP bank0
   947     02C2  0080               	movwf	0
   948     02C3                     l1482:
   949                           
   950                           ;./display.h: 108:         value /= 10;
   951     02C3  300A               	movlw	10
   952     02C4  00B4               	movwf	___lwdiv@divisor
   953     02C5  3000               	movlw	0
   954     02C6  00B5               	movwf	___lwdiv@divisor+1
   955     02C7  1683               	bsf	3,5	;RP0=1, select bank1
   956     02C8  1303               	bcf	3,6	;RP1=0, select bank1
   957     02C9  082D               	movf	(setDisplay@value+1)^(0+128),w
   958     02CA  1283               	bcf	3,5	;RP0=0, select bank0
   959     02CB  1303               	bcf	3,6	;RP1=0, select bank0
   960     02CC  00B7               	movwf	___lwdiv@dividend+1
   961     02CD  1683               	bsf	3,5	;RP0=1, select bank1
   962     02CE  1303               	bcf	3,6	;RP1=0, select bank1
   963     02CF  082C               	movf	setDisplay@value^(0+128),w
   964     02D0  1283               	bcf	3,5	;RP0=0, select bank0
   965     02D1  1303               	bcf	3,6	;RP1=0, select bank0
   966     02D2  00B6               	movwf	___lwdiv@dividend
   967     02D3  118A  24ED  118A   	fcall	___lwdiv
   968     02D6  1283               	bcf	3,5	;RP0=0, select bank0
   969     02D7  1303               	bcf	3,6	;RP1=0, select bank0
   970     02D8  0835               	movf	?___lwdiv+1,w
   971     02D9  1683               	bsf	3,5	;RP0=1, select bank1
   972     02DA  1303               	bcf	3,6	;RP1=0, select bank1
   973     02DB  00AD               	movwf	(setDisplay@value+1)^(0+128)
   974     02DC  1283               	bcf	3,5	;RP0=0, select bank0
   975     02DD  1303               	bcf	3,6	;RP1=0, select bank0
   976     02DE  0834               	movf	?___lwdiv,w
   977     02DF  1683               	bsf	3,5	;RP0=1, select bank1
   978     02E0  1303               	bcf	3,6	;RP1=0, select bank1
   979     02E1  00AC               	movwf	setDisplay@value^(0+128)
   980     02E2                     l1484:
   981                           
   982                           ;./display.h: 109:     }
   983     02E2  30FF               	movlw	255
   984     02E3  07AE               	addwf	setDisplay@i^(0+128),f
   985     02E4  1803               	skipnc
   986     02E5  0AAF               	incf	(setDisplay@i+1)^(0+128),f
   987     02E6  30FF               	movlw	255
   988     02E7  07AF               	addwf	(setDisplay@i+1)^(0+128),f
   989     02E8                     l1486:
   990     02E8  1FAF               	btfss	(setDisplay@i+1)^(0+128),7
   991     02E9  2AEB               	goto	u1471
   992     02EA  2AEC               	goto	u1470
   993     02EB                     u1471:
   994     02EB  2AA6               	goto	l1480
   995     02EC                     u1470:
   996     02EC                     l95:
   997     02EC  0008               	return
   998     02ED                     __end_of_setDisplay:
   999                           
  1000                           	psect	text2
  1001     0579                     __ptext2:	
  1002 ;; *************** function ___lwmod *****************
  1003 ;; Defined at:
  1004 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;  divisor         2   20[BANK0 ] unsigned int 
  1007 ;;  dividend        2   22[BANK0 ] unsigned int 
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;  counter         1   25[BANK0 ] unsigned char 
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  2   20[BANK0 ] unsigned int 
  1012 ;; Registers used:
  1013 ;;		wreg, status,2, status,0
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1019 ;;      Params:         0       4       0       0
  1020 ;;      Locals:         0       1       0       0
  1021 ;;      Temps:          0       1       0       0
  1022 ;;      Totals:         0       6       0       0
  1023 ;;Total ram usage:        6 bytes
  1024 ;; Hardware stack levels used: 1
  1025 ;; Hardware stack levels required when called: 3
  1026 ;; This function calls:
  1027 ;;		Nothing
  1028 ;; This function is called by:
  1029 ;;		_setDisplay
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033     0579                     ___lwmod:	
  1034                           ;psect for function ___lwmod
  1035                           
  1036     0579                     l1168:	
  1037                           ;incstack = 0
  1038                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1039                           
  1040     0579  1283               	bcf	3,5	;RP0=0, select bank0
  1041     057A  1303               	bcf	3,6	;RP1=0, select bank0
  1042     057B  0834               	movf	___lwmod@divisor,w
  1043     057C  0435               	iorwf	___lwmod@divisor+1,w
  1044     057D  1903               	btfsc	3,2
  1045     057E  2D80               	goto	u901
  1046     057F  2D81               	goto	u900
  1047     0580                     u901:
  1048     0580  2DB0               	goto	l1186
  1049     0581                     u900:
  1050     0581                     l1170:
  1051     0581  01B9               	clrf	___lwmod@counter
  1052     0582  0AB9               	incf	___lwmod@counter,f
  1053     0583  2D8F               	goto	l1176
  1054     0584                     l1172:
  1055     0584  3001               	movlw	1
  1056     0585                     u915:
  1057     0585  1003               	clrc
  1058     0586  0DB4               	rlf	___lwmod@divisor,f
  1059     0587  0DB5               	rlf	___lwmod@divisor+1,f
  1060     0588  3EFF               	addlw	-1
  1061     0589  1D03               	skipz
  1062     058A  2D85               	goto	u915
  1063     058B                     l1174:
  1064     058B  3001               	movlw	1
  1065     058C  00B8               	movwf	??___lwmod
  1066     058D  0838               	movf	??___lwmod,w
  1067     058E  07B9               	addwf	___lwmod@counter,f
  1068     058F                     l1176:
  1069     058F  1FB5               	btfss	___lwmod@divisor+1,7
  1070     0590  2D92               	goto	u921
  1071     0591  2D93               	goto	u920
  1072     0592                     u921:
  1073     0592  2D84               	goto	l1172
  1074     0593                     u920:
  1075     0593                     l1178:
  1076     0593  0835               	movf	___lwmod@divisor+1,w
  1077     0594  0237               	subwf	___lwmod@dividend+1,w
  1078     0595  1D03               	skipz
  1079     0596  2D99               	goto	u935
  1080     0597  0834               	movf	___lwmod@divisor,w
  1081     0598  0236               	subwf	___lwmod@dividend,w
  1082     0599                     u935:
  1083     0599  1C03               	skipc
  1084     059A  2D9C               	goto	u931
  1085     059B  2D9D               	goto	u930
  1086     059C                     u931:
  1087     059C  2DA3               	goto	l1182
  1088     059D                     u930:
  1089     059D                     l1180:
  1090     059D  0834               	movf	___lwmod@divisor,w
  1091     059E  02B6               	subwf	___lwmod@dividend,f
  1092     059F  0835               	movf	___lwmod@divisor+1,w
  1093     05A0  1C03               	skipc
  1094     05A1  03B7               	decf	___lwmod@dividend+1,f
  1095     05A2  02B7               	subwf	___lwmod@dividend+1,f
  1096     05A3                     l1182:
  1097     05A3  3001               	movlw	1
  1098     05A4                     u945:
  1099     05A4  1003               	clrc
  1100     05A5  0CB5               	rrf	___lwmod@divisor+1,f
  1101     05A6  0CB4               	rrf	___lwmod@divisor,f
  1102     05A7  3EFF               	addlw	-1
  1103     05A8  1D03               	skipz
  1104     05A9  2DA4               	goto	u945
  1105     05AA                     l1184:
  1106     05AA  3001               	movlw	1
  1107     05AB  02B9               	subwf	___lwmod@counter,f
  1108     05AC  1D03               	btfss	3,2
  1109     05AD  2DAF               	goto	u951
  1110     05AE  2DB0               	goto	u950
  1111     05AF                     u951:
  1112     05AF  2D93               	goto	l1178
  1113     05B0                     u950:
  1114     05B0                     l1186:
  1115     05B0  0837               	movf	___lwmod@dividend+1,w
  1116     05B1  00B5               	movwf	?___lwmod+1
  1117     05B2  0836               	movf	___lwmod@dividend,w
  1118     05B3  00B4               	movwf	?___lwmod
  1119     05B4                     l528:
  1120     05B4  0008               	return
  1121     05B5                     __end_of___lwmod:
  1122                           
  1123                           	psect	text3
  1124     04ED                     __ptext3:	
  1125 ;; *************** function ___lwdiv *****************
  1126 ;; Defined at:
  1127 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;  divisor         2   20[BANK0 ] unsigned int 
  1130 ;;  dividend        2   22[BANK0 ] unsigned int 
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;  quotient        2   25[BANK0 ] unsigned int 
  1133 ;;  counter         1   27[BANK0 ] unsigned char 
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  2   20[BANK0 ] unsigned int 
  1136 ;; Registers used:
  1137 ;;		wreg, status,2, status,0
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1143 ;;      Params:         0       4       0       0
  1144 ;;      Locals:         0       3       0       0
  1145 ;;      Temps:          0       1       0       0
  1146 ;;      Totals:         0       8       0       0
  1147 ;;Total ram usage:        8 bytes
  1148 ;; Hardware stack levels used: 1
  1149 ;; Hardware stack levels required when called: 3
  1150 ;; This function calls:
  1151 ;;		Nothing
  1152 ;; This function is called by:
  1153 ;;		_setDisplay
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157     04ED                     ___lwdiv:	
  1158                           ;psect for function ___lwdiv
  1159                           
  1160     04ED                     l1142:	
  1161                           ;incstack = 0
  1162                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1163                           
  1164     04ED  1283               	bcf	3,5	;RP0=0, select bank0
  1165     04EE  1303               	bcf	3,6	;RP1=0, select bank0
  1166     04EF  01B9               	clrf	___lwdiv@quotient
  1167     04F0  01BA               	clrf	___lwdiv@quotient+1
  1168     04F1                     l1144:
  1169     04F1  0834               	movf	___lwdiv@divisor,w
  1170     04F2  0435               	iorwf	___lwdiv@divisor+1,w
  1171     04F3  1903               	btfsc	3,2
  1172     04F4  2CF6               	goto	u831
  1173     04F5  2CF7               	goto	u830
  1174     04F6                     u831:
  1175     04F6  2D2E               	goto	l1164
  1176     04F7                     u830:
  1177     04F7                     l1146:
  1178     04F7  01BB               	clrf	___lwdiv@counter
  1179     04F8  0ABB               	incf	___lwdiv@counter,f
  1180     04F9  2D05               	goto	l1152
  1181     04FA                     l1148:
  1182     04FA  3001               	movlw	1
  1183     04FB                     u845:
  1184     04FB  1003               	clrc
  1185     04FC  0DB4               	rlf	___lwdiv@divisor,f
  1186     04FD  0DB5               	rlf	___lwdiv@divisor+1,f
  1187     04FE  3EFF               	addlw	-1
  1188     04FF  1D03               	skipz
  1189     0500  2CFB               	goto	u845
  1190     0501                     l1150:
  1191     0501  3001               	movlw	1
  1192     0502  00B8               	movwf	??___lwdiv
  1193     0503  0838               	movf	??___lwdiv,w
  1194     0504  07BB               	addwf	___lwdiv@counter,f
  1195     0505                     l1152:
  1196     0505  1FB5               	btfss	___lwdiv@divisor+1,7
  1197     0506  2D08               	goto	u851
  1198     0507  2D09               	goto	u850
  1199     0508                     u851:
  1200     0508  2CFA               	goto	l1148
  1201     0509                     u850:
  1202     0509                     l1154:
  1203     0509  3001               	movlw	1
  1204     050A                     u865:
  1205     050A  1003               	clrc
  1206     050B  0DB9               	rlf	___lwdiv@quotient,f
  1207     050C  0DBA               	rlf	___lwdiv@quotient+1,f
  1208     050D  3EFF               	addlw	-1
  1209     050E  1D03               	skipz
  1210     050F  2D0A               	goto	u865
  1211     0510  0835               	movf	___lwdiv@divisor+1,w
  1212     0511  0237               	subwf	___lwdiv@dividend+1,w
  1213     0512  1D03               	skipz
  1214     0513  2D16               	goto	u875
  1215     0514  0834               	movf	___lwdiv@divisor,w
  1216     0515  0236               	subwf	___lwdiv@dividend,w
  1217     0516                     u875:
  1218     0516  1C03               	skipc
  1219     0517  2D19               	goto	u871
  1220     0518  2D1A               	goto	u870
  1221     0519                     u871:
  1222     0519  2D21               	goto	l1160
  1223     051A                     u870:
  1224     051A                     l1156:
  1225     051A  0834               	movf	___lwdiv@divisor,w
  1226     051B  02B6               	subwf	___lwdiv@dividend,f
  1227     051C  0835               	movf	___lwdiv@divisor+1,w
  1228     051D  1C03               	skipc
  1229     051E  03B7               	decf	___lwdiv@dividend+1,f
  1230     051F  02B7               	subwf	___lwdiv@dividend+1,f
  1231     0520                     l1158:
  1232     0520  1439               	bsf	___lwdiv@quotient,0
  1233     0521                     l1160:
  1234     0521  3001               	movlw	1
  1235     0522                     u885:
  1236     0522  1003               	clrc
  1237     0523  0CB5               	rrf	___lwdiv@divisor+1,f
  1238     0524  0CB4               	rrf	___lwdiv@divisor,f
  1239     0525  3EFF               	addlw	-1
  1240     0526  1D03               	skipz
  1241     0527  2D22               	goto	u885
  1242     0528                     l1162:
  1243     0528  3001               	movlw	1
  1244     0529  02BB               	subwf	___lwdiv@counter,f
  1245     052A  1D03               	btfss	3,2
  1246     052B  2D2D               	goto	u891
  1247     052C  2D2E               	goto	u890
  1248     052D                     u891:
  1249     052D  2D09               	goto	l1154
  1250     052E                     u890:
  1251     052E                     l1164:
  1252     052E  083A               	movf	___lwdiv@quotient+1,w
  1253     052F  00B5               	movwf	?___lwdiv+1
  1254     0530  0839               	movf	___lwdiv@quotient,w
  1255     0531  00B4               	movwf	?___lwdiv
  1256     0532                     l518:
  1257     0532  0008               	return
  1258     0533                     __end_of___lwdiv:
  1259                           
  1260                           	psect	text4
  1261     063A                     __ptext4:	
  1262 ;; *************** function _readFromEEPROM *****************
  1263 ;; Defined at:
  1264 ;;		line 18 in file "./eeprom.h"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;  address         1    wreg     unsigned char 
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;  address         1   26[BANK0 ] unsigned char 
  1269 ;;  data            2   24[BANK0 ] int 
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  2   20[BANK0 ] int 
  1272 ;; Registers used:
  1273 ;;		wreg
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1279 ;;      Params:         0       2       0       0
  1280 ;;      Locals:         0       3       0       0
  1281 ;;      Temps:          0       2       0       0
  1282 ;;      Totals:         0       7       0       0
  1283 ;;Total ram usage:        7 bytes
  1284 ;; Hardware stack levels used: 1
  1285 ;; Hardware stack levels required when called: 3
  1286 ;; This function calls:
  1287 ;;		Nothing
  1288 ;; This function is called by:
  1289 ;;		_main
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293     063A                     _readFromEEPROM:	
  1294                           ;psect for function _readFromEEPROM
  1295                           
  1296                           
  1297                           ;incstack = 0
  1298                           ; Regs used in _readFromEEPROM: [wreg]
  1299                           ;readFromEEPROM@address stored from wreg
  1300     063A  1283               	bcf	3,5	;RP0=0, select bank0
  1301     063B  1303               	bcf	3,6	;RP1=0, select bank0
  1302     063C  00BA               	movwf	readFromEEPROM@address
  1303     063D                     l1308:
  1304                           
  1305                           ;./eeprom.h: 20:     EEADR = address;
  1306     063D  083A               	movf	readFromEEPROM@address,w
  1307     063E  1283               	bcf	3,5	;RP0=0, select bank2
  1308     063F  1703               	bsf	3,6	;RP1=1, select bank2
  1309     0640  008D               	movwf	13	;volatile
  1310     0641                     l1310:
  1311                           
  1312                           ;./eeprom.h: 23:     EECON1bits.RD = 1;
  1313     0641  1683               	bsf	3,5	;RP0=1, select bank3
  1314     0642  1703               	bsf	3,6	;RP1=1, select bank3
  1315     0643  140C               	bsf	12,0	;volsfr
  1316                           
  1317                           ;./eeprom.h: 24:     int data = EEDATA;
  1318     0644  1283               	bcf	3,5	;RP0=0, select bank2
  1319     0645  1703               	bsf	3,6	;RP1=1, select bank2
  1320     0646  080C               	movf	12,w	;volatile
  1321     0647  1283               	bcf	3,5	;RP0=0, select bank0
  1322     0648  1303               	bcf	3,6	;RP1=0, select bank0
  1323     0649  00B6               	movwf	??_readFromEEPROM
  1324     064A  01B7               	clrf	??_readFromEEPROM+1
  1325     064B  0836               	movf	??_readFromEEPROM,w
  1326     064C  00B8               	movwf	readFromEEPROM@data
  1327     064D  0837               	movf	??_readFromEEPROM+1,w
  1328     064E  00B9               	movwf	readFromEEPROM@data+1
  1329                           
  1330                           ;./eeprom.h: 26:     return data;
  1331     064F  0839               	movf	readFromEEPROM@data+1,w
  1332     0650  00B5               	movwf	?_readFromEEPROM+1
  1333     0651  0838               	movf	readFromEEPROM@data,w
  1334     0652  00B4               	movwf	?_readFromEEPROM
  1335     0653                     l104:
  1336     0653  0008               	return
  1337     0654                     __end_of_readFromEEPROM:
  1338                           
  1339                           	psect	text5
  1340     0654                     __ptext5:	
  1341 ;; *************** function _initializeIOs *****************
  1342 ;; Defined at:
  1343 ;;		line 4 in file "./config.h"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;		None
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;		None
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		wreg, status,2, status,0
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1357 ;;      Params:         0       0       0       0
  1358 ;;      Locals:         0       0       0       0
  1359 ;;      Temps:          0       0       0       0
  1360 ;;      Totals:         0       0       0       0
  1361 ;;Total ram usage:        0 bytes
  1362 ;; Hardware stack levels used: 1
  1363 ;; Hardware stack levels required when called: 3
  1364 ;; This function calls:
  1365 ;;		Nothing
  1366 ;; This function is called by:
  1367 ;;		_main
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371     0654                     _initializeIOs:	
  1372                           ;psect for function _initializeIOs
  1373                           
  1374     0654                     l1214:	
  1375                           ;incstack = 0
  1376                           ; Regs used in _initializeIOs: [wreg+status,2+status,0]
  1377                           
  1378                           
  1379                           ;./config.h: 7:     ANSEL = 0x00;
  1380     0654  1283               	bcf	3,5	;RP0=0, select bank2
  1381     0655  1703               	bsf	3,6	;RP1=1, select bank2
  1382     0656  019E               	clrf	30	;volatile
  1383                           
  1384                           ;./config.h: 8:     ANSELH = 0x00;
  1385     0657  019F               	clrf	31	;volatile
  1386     0658                     l1216:
  1387                           
  1388                           ;./config.h: 12:     TRISA = 0b00111000;
  1389     0658  3038               	movlw	56
  1390     0659  1683               	bsf	3,5	;RP0=1, select bank1
  1391     065A  1303               	bcf	3,6	;RP1=0, select bank1
  1392     065B  0085               	movwf	5	;volatile
  1393     065C                     l1218:
  1394                           
  1395                           ;./config.h: 13:     TRISB = 0b00100000;
  1396     065C  3020               	movlw	32
  1397     065D  0086               	movwf	6	;volatile
  1398     065E                     l1220:
  1399                           
  1400                           ;./config.h: 14:     TRISC = 0b00100000;
  1401     065E  3020               	movlw	32
  1402     065F  0087               	movwf	7	;volatile
  1403     0660                     l1222:
  1404                           
  1405                           ;./config.h: 21:     OSCCONbits.IRCF = 0b110;
  1406     0660  080F               	movf	15,w	;volatile
  1407     0661  398F               	andlw	-113
  1408     0662  3860               	iorlw	96
  1409     0663  008F               	movwf	15	;volatile
  1410     0664                     l55:
  1411     0664  0008               	return
  1412     0665                     __end_of_initializeIOs:
  1413                           
  1414                           	psect	text6
  1415     05B5                     __ptext6:	
  1416 ;; *************** function _checkSelectorToggle *****************
  1417 ;; Defined at:
  1418 ;;		line 123 in file "main.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;		None
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      void 
  1425 ;; Registers used:
  1426 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1432 ;;      Params:         0       0       0       0
  1433 ;;      Locals:         0       0       0       0
  1434 ;;      Temps:          0       0       0       0
  1435 ;;      Totals:         0       0       0       0
  1436 ;;Total ram usage:        0 bytes
  1437 ;; Hardware stack levels used: 1
  1438 ;; Hardware stack levels required when called: 4
  1439 ;; This function calls:
  1440 ;;		_writeToEEPROM
  1441 ;; This function is called by:
  1442 ;;		_main
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446     05B5                     _checkSelectorToggle:	
  1447                           ;psect for function _checkSelectorToggle
  1448                           
  1449     05B5                     l1320:	
  1450                           ;incstack = 0
  1451                           ; Regs used in _checkSelectorToggle: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1452                           
  1453                           
  1454                           ;main.c: 124:     static unsigned char lastState = 0;;main.c: 126:     if (!PORTAbits.RA
      +                          3 && lastState) {
  1455     05B5  1283               	bcf	3,5	;RP0=0, select bank0
  1456     05B6  1303               	bcf	3,6	;RP1=0, select bank0
  1457     05B7  1985               	btfsc	5,3	;volatile
  1458     05B8  2DBA               	goto	u1161
  1459     05B9  2DBB               	goto	u1160
  1460     05BA                     u1161:
  1461     05BA  2DEB               	goto	l1332
  1462     05BB                     u1160:
  1463     05BB                     l1322:
  1464     05BB  0856               	movf	checkSelectorToggle@lastState,w
  1465     05BC  1903               	btfsc	3,2
  1466     05BD  2DBF               	goto	u1171
  1467     05BE  2DC0               	goto	u1170
  1468     05BF                     u1171:
  1469     05BF  2DEB               	goto	l1332
  1470     05C0                     u1170:
  1471     05C0                     l1324:
  1472                           
  1473                           ;main.c: 127:         lastState = 0;
  1474     05C0  01D6               	clrf	checkSelectorToggle@lastState
  1475     05C1                     l1326:
  1476                           
  1477                           ;main.c: 128:         if(++selectedIndicator>4)
  1478     05C1  3001               	movlw	1
  1479     05C2  1683               	bsf	3,5	;RP0=1, select bank1
  1480     05C3  1303               	bcf	3,6	;RP1=0, select bank1
  1481     05C4  07B2               	addwf	_selectedIndicator^(0+128),f
  1482     05C5  1803               	skipnc
  1483     05C6  0AB3               	incf	(_selectedIndicator+1)^(0+128),f
  1484     05C7  3000               	movlw	0
  1485     05C8  07B3               	addwf	(_selectedIndicator+1)^(0+128),f
  1486     05C9  0833               	movf	(_selectedIndicator+1)^(0+128),w
  1487     05CA  3A80               	xorlw	128
  1488     05CB  00FF               	movwf	btemp+1
  1489     05CC  3080               	movlw	128
  1490     05CD  027F               	subwf	btemp+1,w
  1491     05CE  1D03               	skipz
  1492     05CF  2DD2               	goto	u1185
  1493     05D0  3005               	movlw	5
  1494     05D1  0232               	subwf	_selectedIndicator^(0+128),w
  1495     05D2                     u1185:
  1496     05D2  1C03               	skipc
  1497     05D3  2DD5               	goto	u1181
  1498     05D4  2DD6               	goto	u1180
  1499     05D5                     u1181:
  1500     05D5  2DDA               	goto	l1330
  1501     05D6                     u1180:
  1502     05D6                     l1328:
  1503                           
  1504                           ;main.c: 129:             selectedIndicator=0;
  1505     05D6  1683               	bsf	3,5	;RP0=1, select bank1
  1506     05D7  1303               	bcf	3,6	;RP1=0, select bank1
  1507     05D8  01B2               	clrf	_selectedIndicator^(0+128)
  1508     05D9  01B3               	clrf	(_selectedIndicator+1)^(0+128)
  1509     05DA                     l1330:
  1510                           
  1511                           ;main.c: 130:         writeToEEPROM(1,selectedIndicator);
  1512     05DA  1683               	bsf	3,5	;RP0=1, select bank1
  1513     05DB  1303               	bcf	3,6	;RP1=0, select bank1
  1514     05DC  0833               	movf	(_selectedIndicator+1)^(0+128),w
  1515     05DD  1283               	bcf	3,5	;RP0=0, select bank0
  1516     05DE  1303               	bcf	3,6	;RP1=0, select bank0
  1517     05DF  00B5               	movwf	writeToEEPROM@data+1
  1518     05E0  1683               	bsf	3,5	;RP0=1, select bank1
  1519     05E1  1303               	bcf	3,6	;RP1=0, select bank1
  1520     05E2  0832               	movf	_selectedIndicator^(0+128),w
  1521     05E3  1283               	bcf	3,5	;RP0=0, select bank0
  1522     05E4  1303               	bcf	3,6	;RP1=0, select bank0
  1523     05E5  00B4               	movwf	writeToEEPROM@data
  1524     05E6  3001               	movlw	1
  1525     05E7  118A  261F  118A   	fcall	_writeToEEPROM
  1526                           
  1527                           ;main.c: 131:     }
  1528     05EA  2DEF               	goto	l150
  1529     05EB                     l1332:
  1530                           
  1531                           ;main.c: 133:         lastState = PORTAbits.RA3;
  1532     05EB  3000               	movlw	0
  1533     05EC  1985               	btfsc	5,3	;volatile
  1534     05ED  3001               	movlw	1
  1535     05EE  00D6               	movwf	checkSelectorToggle@lastState
  1536     05EF                     l150:
  1537     05EF  0008               	return
  1538     05F0                     __end_of_checkSelectorToggle:
  1539                           
  1540                           	psect	text7
  1541     061F                     __ptext7:	
  1542 ;; *************** function _writeToEEPROM *****************
  1543 ;; Defined at:
  1544 ;;		line 2 in file "./eeprom.h"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;  address         1    wreg     unsigned char 
  1547 ;;  data            2   20[BANK0 ] int 
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;  address         1   22[BANK0 ] unsigned char 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1559 ;;      Params:         0       2       0       0
  1560 ;;      Locals:         0       1       0       0
  1561 ;;      Temps:          0       0       0       0
  1562 ;;      Totals:         0       3       0       0
  1563 ;;Total ram usage:        3 bytes
  1564 ;; Hardware stack levels used: 1
  1565 ;; Hardware stack levels required when called: 3
  1566 ;; This function calls:
  1567 ;;		Nothing
  1568 ;; This function is called by:
  1569 ;;		_checkSelectorToggle
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573     061F                     _writeToEEPROM:	
  1574                           ;psect for function _writeToEEPROM
  1575                           
  1576                           
  1577                           ;incstack = 0
  1578                           ; Regs used in _writeToEEPROM: [wreg]
  1579                           ;writeToEEPROM@address stored from wreg
  1580     061F  1283               	bcf	3,5	;RP0=0, select bank0
  1581     0620  1303               	bcf	3,6	;RP1=0, select bank0
  1582     0621  00B6               	movwf	writeToEEPROM@address
  1583     0622                     l1098:
  1584                           
  1585                           ;./eeprom.h: 4:     EEADR = address;
  1586     0622  0836               	movf	writeToEEPROM@address,w
  1587     0623  1283               	bcf	3,5	;RP0=0, select bank2
  1588     0624  1703               	bsf	3,6	;RP1=1, select bank2
  1589     0625  008D               	movwf	13	;volatile
  1590                           
  1591                           ;./eeprom.h: 5:     EEDATA = (unsigned char)data;
  1592     0626  1283               	bcf	3,5	;RP0=0, select bank0
  1593     0627  1303               	bcf	3,6	;RP1=0, select bank0
  1594     0628  0834               	movf	writeToEEPROM@data,w
  1595     0629  1283               	bcf	3,5	;RP0=0, select bank2
  1596     062A  1703               	bsf	3,6	;RP1=1, select bank2
  1597     062B  008C               	movwf	12	;volatile
  1598     062C                     l1100:
  1599                           
  1600                           ;./eeprom.h: 8:     EECON1bits.WREN = 1;
  1601     062C  1683               	bsf	3,5	;RP0=1, select bank3
  1602     062D  1703               	bsf	3,6	;RP1=1, select bank3
  1603     062E  150C               	bsf	12,2	;volsfr
  1604                           
  1605                           ;./eeprom.h: 9:     EECON2 = 0x55;
  1606     062F  3055               	movlw	85
  1607     0630  008D               	movwf	13	;volsfr
  1608                           
  1609                           ;./eeprom.h: 10:     EECON2 = 0xAA;
  1610     0631  30AA               	movlw	170
  1611     0632  008D               	movwf	13	;volsfr
  1612     0633                     l1102:
  1613                           
  1614                           ;./eeprom.h: 11:     EECON1bits.WR = 1;
  1615     0633  148C               	bsf	12,1	;volsfr
  1616     0634                     l98:	
  1617                           ;./eeprom.h: 12:     while (EECON1bits.WR == 1);
  1618                           
  1619     0634  188C               	btfsc	12,1	;volsfr
  1620     0635  2E37               	goto	u701
  1621     0636  2E38               	goto	u700
  1622     0637                     u701:
  1623     0637  2E34               	goto	l98
  1624     0638                     u700:
  1625     0638                     l100:
  1626                           
  1627                           ;./eeprom.h: 13:     EECON1bits.WREN = 0;
  1628     0638  110C               	bcf	12,2	;volsfr
  1629     0639                     l101:
  1630     0639  0008               	return
  1631     063A                     __end_of_writeToEEPROM:
  1632                           
  1633                           	psect	text8
  1634     02ED                     __ptext8:	
  1635 ;; *************** function _calculateRPM *****************
  1636 ;; Defined at:
  1637 ;;		line 137 in file "main.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;		None
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;  rpm             2   44[BANK0 ] int 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  2   42[BANK0 ] int 
  1644 ;; Registers used:
  1645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1651 ;;      Params:         0       2       0       0
  1652 ;;      Locals:         0       2       0       0
  1653 ;;      Temps:          0       0       7       0
  1654 ;;      Totals:         0       4       7       0
  1655 ;;Total ram usage:       11 bytes
  1656 ;; Hardware stack levels used: 1
  1657 ;; Hardware stack levels required when called: 4
  1658 ;; This function calls:
  1659 ;;		___lldiv
  1660 ;;		___lmul
  1661 ;; This function is called by:
  1662 ;;		_main
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666     02ED                     _calculateRPM:	
  1667                           ;psect for function _calculateRPM
  1668                           
  1669     02ED                     l1488:	
  1670                           ;incstack = 0
  1671                           ; Regs used in _calculateRPM: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1672                           
  1673                           
  1674                           ;main.c: 139:     int rpm = (7500000 * numberOfSamples) / (PULSES_PER_REV[selectedIndica
      +                          tor] * period);
  1675     02ED  1683               	bsf	3,5	;RP0=1, select bank1
  1676     02EE  1303               	bcf	3,6	;RP1=0, select bank1
  1677     02EF  0832               	movf	_selectedIndicator^(0+128),w
  1678     02F0  00A5               	movwf	??_calculateRPM^(0+128)
  1679     02F1  0725               	addwf	??_calculateRPM^(0+128),w
  1680     02F2  3E01               	addlw	low ((_PULSES_PER_REV-__stringbase)| (0+32768))
  1681     02F3  0084               	movwf	4
  1682     02F4  118A  2600  118A   	fcall	stringdir
  1683     02F7  00A6               	movwf	(??_calculateRPM+1)^(0+128)
  1684     02F8  118A  2600  118A   	fcall	stringdir
  1685     02FB  00A7               	movwf	((??_calculateRPM+1)^(0+128)+1)
  1686     02FC  0826               	movf	(??_calculateRPM+1)^(0+128),w
  1687     02FD  1283               	bcf	3,5	;RP0=0, select bank0
  1688     02FE  1303               	bcf	3,6	;RP1=0, select bank0
  1689     02FF  00B4               	movwf	___lmul@multiplier
  1690     0300  1683               	bsf	3,5	;RP0=1, select bank1
  1691     0301  1303               	bcf	3,6	;RP1=0, select bank1
  1692     0302  0827               	movf	(??_calculateRPM+2)^(0+128),w
  1693     0303  1283               	bcf	3,5	;RP0=0, select bank0
  1694     0304  1303               	bcf	3,6	;RP1=0, select bank0
  1695     0305  00B5               	movwf	___lmul@multiplier+1
  1696     0306  3000               	movlw	0
  1697     0307  1BB5               	btfsc	___lmul@multiplier+1,7
  1698     0308  30FF               	movlw	255
  1699     0309  00B6               	movwf	___lmul@multiplier+2
  1700     030A  00B7               	movwf	___lmul@multiplier+3
  1701     030B  0851               	movf	_period+3,w
  1702     030C  00BB               	movwf	___lmul@multiplicand+3
  1703     030D  0850               	movf	_period+2,w
  1704     030E  00BA               	movwf	___lmul@multiplicand+2
  1705     030F  084F               	movf	_period+1,w
  1706     0310  00B9               	movwf	___lmul@multiplicand+1
  1707     0311  084E               	movf	_period,w
  1708     0312  00B8               	movwf	___lmul@multiplicand
  1709     0313  118A  24A5  118A   	fcall	___lmul
  1710     0316  1283               	bcf	3,5	;RP0=0, select bank0
  1711     0317  1303               	bcf	3,6	;RP1=0, select bank0
  1712     0318  0837               	movf	?___lmul+3,w
  1713     0319  00C4               	movwf	___lldiv@divisor+3
  1714     031A  0836               	movf	?___lmul+2,w
  1715     031B  00C3               	movwf	___lldiv@divisor+2
  1716     031C  0835               	movf	?___lmul+1,w
  1717     031D  00C2               	movwf	___lldiv@divisor+1
  1718     031E  0834               	movf	?___lmul,w
  1719     031F  00C1               	movwf	___lldiv@divisor
  1720     0320  085B               	movf	_numberOfSamples,w
  1721     0321  1683               	bsf	3,5	;RP0=1, select bank1
  1722     0322  1303               	bcf	3,6	;RP1=0, select bank1
  1723     0323  00A8               	movwf	(??_calculateRPM+3)^(0+128)
  1724     0324  01A9               	clrf	((??_calculateRPM+3)^(0+128)+1)
  1725     0325  01AA               	clrf	((??_calculateRPM+3)^(0+128)+2)
  1726     0326  01AB               	clrf	((??_calculateRPM+3)^(0+128)+3)
  1727     0327  082B               	movf	(??_calculateRPM+6)^(0+128),w
  1728     0328  1283               	bcf	3,5	;RP0=0, select bank0
  1729     0329  1303               	bcf	3,6	;RP1=0, select bank0
  1730     032A  00B7               	movwf	___lmul@multiplier+3
  1731     032B  1683               	bsf	3,5	;RP0=1, select bank1
  1732     032C  1303               	bcf	3,6	;RP1=0, select bank1
  1733     032D  082A               	movf	(??_calculateRPM+5)^(0+128),w
  1734     032E  1283               	bcf	3,5	;RP0=0, select bank0
  1735     032F  1303               	bcf	3,6	;RP1=0, select bank0
  1736     0330  00B6               	movwf	___lmul@multiplier+2
  1737     0331  1683               	bsf	3,5	;RP0=1, select bank1
  1738     0332  1303               	bcf	3,6	;RP1=0, select bank1
  1739     0333  0829               	movf	(??_calculateRPM+4)^(0+128),w
  1740     0334  1283               	bcf	3,5	;RP0=0, select bank0
  1741     0335  1303               	bcf	3,6	;RP1=0, select bank0
  1742     0336  00B5               	movwf	___lmul@multiplier+1
  1743     0337  1683               	bsf	3,5	;RP0=1, select bank1
  1744     0338  1303               	bcf	3,6	;RP1=0, select bank1
  1745     0339  0828               	movf	(??_calculateRPM+3)^(0+128),w
  1746     033A  1283               	bcf	3,5	;RP0=0, select bank0
  1747     033B  1303               	bcf	3,6	;RP1=0, select bank0
  1748     033C  00B4               	movwf	___lmul@multiplier
  1749     033D  3000               	movlw	0
  1750     033E  00BB               	movwf	___lmul@multiplicand+3
  1751     033F  3072               	movlw	114
  1752     0340  00BA               	movwf	___lmul@multiplicand+2
  1753     0341  3070               	movlw	112
  1754     0342  00B9               	movwf	___lmul@multiplicand+1
  1755     0343  30E0               	movlw	224
  1756     0344  00B8               	movwf	___lmul@multiplicand
  1757     0345  118A  24A5  118A   	fcall	___lmul
  1758     0348  1283               	bcf	3,5	;RP0=0, select bank0
  1759     0349  1303               	bcf	3,6	;RP1=0, select bank0
  1760     034A  0837               	movf	?___lmul+3,w
  1761     034B  00C8               	movwf	___lldiv@dividend+3
  1762     034C  0836               	movf	?___lmul+2,w
  1763     034D  00C7               	movwf	___lldiv@dividend+2
  1764     034E  0835               	movf	?___lmul+1,w
  1765     034F  00C6               	movwf	___lldiv@dividend+1
  1766     0350  0834               	movf	?___lmul,w
  1767     0351  00C5               	movwf	___lldiv@dividend
  1768     0352  118A  21EB  118A   	fcall	___lldiv
  1769     0355  1283               	bcf	3,5	;RP0=0, select bank0
  1770     0356  1303               	bcf	3,6	;RP1=0, select bank0
  1771     0357  0842               	movf	?___lldiv+1,w
  1772     0358  00CD               	movwf	calculateRPM@rpm+1
  1773     0359  0841               	movf	?___lldiv,w
  1774     035A  00CC               	movwf	calculateRPM@rpm
  1775     035B                     l1490:
  1776                           
  1777                           ;main.c: 140:     return rpm;
  1778     035B  084D               	movf	calculateRPM@rpm+1,w
  1779     035C  00CB               	movwf	?_calculateRPM+1
  1780     035D  084C               	movf	calculateRPM@rpm,w
  1781     035E  00CA               	movwf	?_calculateRPM
  1782     035F                     l153:
  1783     035F  0008               	return
  1784     0360                     __end_of_calculateRPM:
  1785                           
  1786                           	psect	text9
  1787     04A5                     __ptext9:	
  1788 ;; *************** function ___lmul *****************
  1789 ;; Defined at:
  1790 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  multiplier      4   20[BANK0 ] unsigned long 
  1793 ;;  multiplicand    4   24[BANK0 ] unsigned long 
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;  product         4   29[BANK0 ] unsigned long 
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  4   20[BANK0 ] unsigned long 
  1798 ;; Registers used:
  1799 ;;		wreg, status,2, status,0
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1805 ;;      Params:         0       8       0       0
  1806 ;;      Locals:         0       4       0       0
  1807 ;;      Temps:          0       1       0       0
  1808 ;;      Totals:         0      13       0       0
  1809 ;;Total ram usage:       13 bytes
  1810 ;; Hardware stack levels used: 1
  1811 ;; Hardware stack levels required when called: 3
  1812 ;; This function calls:
  1813 ;;		Nothing
  1814 ;; This function is called by:
  1815 ;;		_calculateRPM
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819     04A5                     ___lmul:	
  1820                           ;psect for function ___lmul
  1821                           
  1822     04A5                     l1104:	
  1823                           ;incstack = 0
  1824                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1825                           
  1826     04A5  3000               	movlw	0
  1827     04A6  1283               	bcf	3,5	;RP0=0, select bank0
  1828     04A7  1303               	bcf	3,6	;RP1=0, select bank0
  1829     04A8  00C0               	movwf	___lmul@product+3
  1830     04A9  3000               	movlw	0
  1831     04AA  00BF               	movwf	___lmul@product+2
  1832     04AB  3000               	movlw	0
  1833     04AC  00BE               	movwf	___lmul@product+1
  1834     04AD  3000               	movlw	0
  1835     04AE  00BD               	movwf	___lmul@product
  1836     04AF                     l1106:
  1837     04AF  1C34               	btfss	___lmul@multiplier,0
  1838     04B0  2CB2               	goto	u711
  1839     04B1  2CB3               	goto	u710
  1840     04B2                     u711:
  1841     04B2  2CCA               	goto	l1110
  1842     04B3                     u710:
  1843     04B3                     l1108:
  1844     04B3  0838               	movf	___lmul@multiplicand,w
  1845     04B4  07BD               	addwf	___lmul@product,f
  1846     04B5  0839               	movf	___lmul@multiplicand+1,w
  1847     04B6  1103               	clrz
  1848     04B7  1803               	skipnc
  1849     04B8  3E01               	addlw	1
  1850     04B9  1903               	skipnz
  1851     04BA  2CBC               	goto	u721
  1852     04BB  07BE               	addwf	___lmul@product+1,f
  1853     04BC                     u721:
  1854     04BC  083A               	movf	___lmul@multiplicand+2,w
  1855     04BD  1103               	clrz
  1856     04BE  1803               	skipnc
  1857     04BF  3E01               	addlw	1
  1858     04C0  1903               	skipnz
  1859     04C1  2CC3               	goto	u722
  1860     04C2  07BF               	addwf	___lmul@product+2,f
  1861     04C3                     u722:
  1862     04C3  083B               	movf	___lmul@multiplicand+3,w
  1863     04C4  1103               	clrz
  1864     04C5  1803               	skipnc
  1865     04C6  3E01               	addlw	1
  1866     04C7  1903               	skipnz
  1867     04C8  2CCA               	goto	u723
  1868     04C9  07C0               	addwf	___lmul@product+3,f
  1869     04CA                     u723:
  1870     04CA                     l1110:
  1871     04CA  3001               	movlw	1
  1872     04CB  00BC               	movwf	??___lmul
  1873     04CC                     u735:
  1874     04CC  1003               	clrc
  1875     04CD  0DB8               	rlf	___lmul@multiplicand,f
  1876     04CE  0DB9               	rlf	___lmul@multiplicand+1,f
  1877     04CF  0DBA               	rlf	___lmul@multiplicand+2,f
  1878     04D0  0DBB               	rlf	___lmul@multiplicand+3,f
  1879     04D1  0BBC               	decfsz	??___lmul,f
  1880     04D2  2CCC               	goto	u735
  1881     04D3                     l1112:
  1882     04D3  3001               	movlw	1
  1883     04D4                     u745:
  1884     04D4  1003               	clrc
  1885     04D5  0CB7               	rrf	___lmul@multiplier+3,f
  1886     04D6  0CB6               	rrf	___lmul@multiplier+2,f
  1887     04D7  0CB5               	rrf	___lmul@multiplier+1,f
  1888     04D8  0CB4               	rrf	___lmul@multiplier,f
  1889     04D9  3EFF               	addlw	-1
  1890     04DA  1D03               	skipz
  1891     04DB  2CD4               	goto	u745
  1892     04DC  0837               	movf	___lmul@multiplier+3,w
  1893     04DD  0436               	iorwf	___lmul@multiplier+2,w
  1894     04DE  0435               	iorwf	___lmul@multiplier+1,w
  1895     04DF  0434               	iorwf	___lmul@multiplier,w
  1896     04E0  1D03               	skipz
  1897     04E1  2CE3               	goto	u751
  1898     04E2  2CE4               	goto	u750
  1899     04E3                     u751:
  1900     04E3  2CAF               	goto	l1106
  1901     04E4                     u750:
  1902     04E4                     l1114:
  1903     04E4  0840               	movf	___lmul@product+3,w
  1904     04E5  00B7               	movwf	?___lmul+3
  1905     04E6  083F               	movf	___lmul@product+2,w
  1906     04E7  00B6               	movwf	?___lmul+2
  1907     04E8  083E               	movf	___lmul@product+1,w
  1908     04E9  00B5               	movwf	?___lmul+1
  1909     04EA  083D               	movf	___lmul@product,w
  1910     04EB  00B4               	movwf	?___lmul
  1911     04EC                     l260:
  1912     04EC  0008               	return
  1913     04ED                     __end_of___lmul:
  1914                           
  1915                           	psect	text10
  1916     01EB                     __ptext10:	
  1917 ;; *************** function ___lldiv *****************
  1918 ;; Defined at:
  1919 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  divisor         4   33[BANK0 ] unsigned long 
  1922 ;;  dividend        4   37[BANK0 ] unsigned long 
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  quotient        4    0[BANK1 ] unsigned long 
  1925 ;;  counter         1    4[BANK1 ] unsigned char 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  4   33[BANK0 ] unsigned long 
  1928 ;; Registers used:
  1929 ;;		wreg, status,2, status,0
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1935 ;;      Params:         0       8       0       0
  1936 ;;      Locals:         0       0       5       0
  1937 ;;      Temps:          0       1       0       0
  1938 ;;      Totals:         0       9       5       0
  1939 ;;Total ram usage:       14 bytes
  1940 ;; Hardware stack levels used: 1
  1941 ;; Hardware stack levels required when called: 3
  1942 ;; This function calls:
  1943 ;;		Nothing
  1944 ;; This function is called by:
  1945 ;;		_calculateRPM
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949     01EB                     ___lldiv:	
  1950                           ;psect for function ___lldiv
  1951                           
  1952     01EB                     l1444:	
  1953                           ;incstack = 0
  1954                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1955                           
  1956     01EB  3000               	movlw	0
  1957     01EC  1683               	bsf	3,5	;RP0=1, select bank1
  1958     01ED  1303               	bcf	3,6	;RP1=0, select bank1
  1959     01EE  00A3               	movwf	(___lldiv@quotient+3)^(0+128)
  1960     01EF  3000               	movlw	0
  1961     01F0  00A2               	movwf	(___lldiv@quotient+2)^(0+128)
  1962     01F1  3000               	movlw	0
  1963     01F2  00A1               	movwf	(___lldiv@quotient+1)^(0+128)
  1964     01F3  3000               	movlw	0
  1965     01F4  00A0               	movwf	___lldiv@quotient^(0+128)
  1966     01F5  1283               	bcf	3,5	;RP0=0, select bank0
  1967     01F6  1303               	bcf	3,6	;RP1=0, select bank0
  1968     01F7  0844               	movf	___lldiv@divisor+3,w
  1969     01F8  0443               	iorwf	___lldiv@divisor+2,w
  1970     01F9  0442               	iorwf	___lldiv@divisor+1,w
  1971     01FA  0441               	iorwf	___lldiv@divisor,w
  1972     01FB  1903               	skipnz
  1973     01FC  29FE               	goto	u1391
  1974     01FD  29FF               	goto	u1390
  1975     01FE                     u1391:
  1976     01FE  2A5C               	goto	l1464
  1977     01FF                     u1390:
  1978     01FF                     l1446:
  1979     01FF  1683               	bsf	3,5	;RP0=1, select bank1
  1980     0200  1303               	bcf	3,6	;RP1=0, select bank1
  1981     0201  01A4               	clrf	___lldiv@counter^(0+128)
  1982     0202  0AA4               	incf	___lldiv@counter^(0+128),f
  1983     0203  2A13               	goto	l1450
  1984     0204                     l1448:
  1985     0204  3001               	movlw	1
  1986     0205  00C9               	movwf	??___lldiv
  1987     0206                     u1405:
  1988     0206  1003               	clrc
  1989     0207  0DC1               	rlf	___lldiv@divisor,f
  1990     0208  0DC2               	rlf	___lldiv@divisor+1,f
  1991     0209  0DC3               	rlf	___lldiv@divisor+2,f
  1992     020A  0DC4               	rlf	___lldiv@divisor+3,f
  1993     020B  0BC9               	decfsz	??___lldiv,f
  1994     020C  2A06               	goto	u1405
  1995     020D  3001               	movlw	1
  1996     020E  00C9               	movwf	??___lldiv
  1997     020F  0849               	movf	??___lldiv,w
  1998     0210  1683               	bsf	3,5	;RP0=1, select bank1
  1999     0211  1303               	bcf	3,6	;RP1=0, select bank1
  2000     0212  07A4               	addwf	___lldiv@counter^(0+128),f
  2001     0213                     l1450:
  2002     0213  1283               	bcf	3,5	;RP0=0, select bank0
  2003     0214  1303               	bcf	3,6	;RP1=0, select bank0
  2004     0215  1FC4               	btfss	___lldiv@divisor+3,7
  2005     0216  2A18               	goto	u1411
  2006     0217  2A19               	goto	u1410
  2007     0218                     u1411:
  2008     0218  2A04               	goto	l1448
  2009     0219                     u1410:
  2010     0219                     l1452:
  2011     0219  3001               	movlw	1
  2012     021A  1283               	bcf	3,5	;RP0=0, select bank0
  2013     021B  00C9               	movwf	??___lldiv
  2014     021C                     u1425:
  2015     021C  1003               	clrc
  2016     021D  1683               	bsf	3,5	;RP0=1, select bank1
  2017     021E  1303               	bcf	3,6	;RP1=0, select bank1
  2018     021F  0DA0               	rlf	___lldiv@quotient^(0+128),f
  2019     0220  0DA1               	rlf	(___lldiv@quotient+1)^(0+128),f
  2020     0221  0DA2               	rlf	(___lldiv@quotient+2)^(0+128),f
  2021     0222  0DA3               	rlf	(___lldiv@quotient+3)^(0+128),f
  2022     0223  1283               	bcf	3,5	;RP0=0, select bank0
  2023     0224  1303               	bcf	3,6	;RP1=0, select bank0
  2024     0225  0BC9               	decfsz	??___lldiv,f
  2025     0226  2A1C               	goto	u1425
  2026     0227                     l1454:
  2027     0227  0844               	movf	___lldiv@divisor+3,w
  2028     0228  0248               	subwf	___lldiv@dividend+3,w
  2029     0229  1D03               	skipz
  2030     022A  2A35               	goto	u1435
  2031     022B  0843               	movf	___lldiv@divisor+2,w
  2032     022C  0247               	subwf	___lldiv@dividend+2,w
  2033     022D  1D03               	skipz
  2034     022E  2A35               	goto	u1435
  2035     022F  0842               	movf	___lldiv@divisor+1,w
  2036     0230  0246               	subwf	___lldiv@dividend+1,w
  2037     0231  1D03               	skipz
  2038     0232  2A35               	goto	u1435
  2039     0233  0841               	movf	___lldiv@divisor,w
  2040     0234  0245               	subwf	___lldiv@dividend,w
  2041     0235                     u1435:
  2042     0235  1C03               	skipc
  2043     0236  2A38               	goto	u1431
  2044     0237  2A39               	goto	u1430
  2045     0238                     u1431:
  2046     0238  2A4A               	goto	l1460
  2047     0239                     u1430:
  2048     0239                     l1456:
  2049     0239  0841               	movf	___lldiv@divisor,w
  2050     023A  02C5               	subwf	___lldiv@dividend,f
  2051     023B  0842               	movf	___lldiv@divisor+1,w
  2052     023C  1C03               	skipc
  2053     023D  0F42               	incfsz	___lldiv@divisor+1,w
  2054     023E  02C6               	subwf	___lldiv@dividend+1,f
  2055     023F  0843               	movf	___lldiv@divisor+2,w
  2056     0240  1C03               	skipc
  2057     0241  0F43               	incfsz	___lldiv@divisor+2,w
  2058     0242  02C7               	subwf	___lldiv@dividend+2,f
  2059     0243  0844               	movf	___lldiv@divisor+3,w
  2060     0244  1C03               	skipc
  2061     0245  0F44               	incfsz	___lldiv@divisor+3,w
  2062     0246  02C8               	subwf	___lldiv@dividend+3,f
  2063     0247                     l1458:
  2064     0247  1683               	bsf	3,5	;RP0=1, select bank1
  2065     0248  1303               	bcf	3,6	;RP1=0, select bank1
  2066     0249  1420               	bsf	___lldiv@quotient^(0+128),0
  2067     024A                     l1460:
  2068     024A  3001               	movlw	1
  2069     024B                     u1445:
  2070     024B  1003               	clrc
  2071     024C  1283               	bcf	3,5	;RP0=0, select bank0
  2072     024D  0CC4               	rrf	___lldiv@divisor+3,f
  2073     024E  0CC3               	rrf	___lldiv@divisor+2,f
  2074     024F  0CC2               	rrf	___lldiv@divisor+1,f
  2075     0250  0CC1               	rrf	___lldiv@divisor,f
  2076     0251  3EFF               	addlw	-1
  2077     0252  1D03               	skipz
  2078     0253  2A4B               	goto	u1445
  2079     0254                     l1462:
  2080     0254  3001               	movlw	1
  2081     0255  1683               	bsf	3,5	;RP0=1, select bank1
  2082     0256  1303               	bcf	3,6	;RP1=0, select bank1
  2083     0257  02A4               	subwf	___lldiv@counter^(0+128),f
  2084     0258  1D03               	btfss	3,2
  2085     0259  2A5B               	goto	u1451
  2086     025A  2A5C               	goto	u1450
  2087     025B                     u1451:
  2088     025B  2A19               	goto	l1452
  2089     025C                     u1450:
  2090     025C                     l1464:
  2091     025C  1683               	bsf	3,5	;RP0=1, select bank1
  2092     025D  1303               	bcf	3,6	;RP1=0, select bank1
  2093     025E  0823               	movf	(___lldiv@quotient+3)^(0+128),w
  2094     025F  1283               	bcf	3,5	;RP0=0, select bank0
  2095     0260  1303               	bcf	3,6	;RP1=0, select bank0
  2096     0261  00C4               	movwf	?___lldiv+3
  2097     0262  1683               	bsf	3,5	;RP0=1, select bank1
  2098     0263  1303               	bcf	3,6	;RP1=0, select bank1
  2099     0264  0822               	movf	(___lldiv@quotient+2)^(0+128),w
  2100     0265  1283               	bcf	3,5	;RP0=0, select bank0
  2101     0266  1303               	bcf	3,6	;RP1=0, select bank0
  2102     0267  00C3               	movwf	?___lldiv+2
  2103     0268  1683               	bsf	3,5	;RP0=1, select bank1
  2104     0269  1303               	bcf	3,6	;RP1=0, select bank1
  2105     026A  0821               	movf	(___lldiv@quotient+1)^(0+128),w
  2106     026B  1283               	bcf	3,5	;RP0=0, select bank0
  2107     026C  1303               	bcf	3,6	;RP1=0, select bank0
  2108     026D  00C2               	movwf	?___lldiv+1
  2109     026E  1683               	bsf	3,5	;RP0=1, select bank1
  2110     026F  1303               	bcf	3,6	;RP1=0, select bank1
  2111     0270  0820               	movf	___lldiv@quotient^(0+128),w
  2112     0271  1283               	bcf	3,5	;RP0=0, select bank0
  2113     0272  1303               	bcf	3,6	;RP1=0, select bank0
  2114     0273  00C1               	movwf	?___lldiv
  2115     0274                     l282:
  2116     0274  0008               	return
  2117     0275                     __end_of___lldiv:
  2118                           
  2119                           	psect	text11
  2120     0665                     __ptext11:	
  2121 ;; *************** function _TMR1_Initialize *****************
  2122 ;; Defined at:
  2123 ;;		line 67 in file "./config.h"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2137 ;;      Params:         0       0       0       0
  2138 ;;      Locals:         0       0       0       0
  2139 ;;      Temps:          0       0       0       0
  2140 ;;      Totals:         0       0       0       0
  2141 ;;Total ram usage:        0 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; Hardware stack levels required when called: 3
  2144 ;; This function calls:
  2145 ;;		Nothing
  2146 ;; This function is called by:
  2147 ;;		_main
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151     0665                     _TMR1_Initialize:	
  2152                           ;psect for function _TMR1_Initialize
  2153                           
  2154     0665                     l1244:	
  2155                           ;incstack = 0
  2156                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0]
  2157                           
  2158                           
  2159                           ;./config.h: 70:     T1CONbits.TMR1CS = 0;
  2160     0665  1283               	bcf	3,5	;RP0=0, select bank0
  2161     0666  1303               	bcf	3,6	;RP1=0, select bank0
  2162     0667  1090               	bcf	16,1	;volatile
  2163     0668                     l1246:
  2164                           
  2165                           ;./config.h: 71:     T1CONbits.T1CKPS = 0b11;
  2166     0668  3030               	movlw	48
  2167     0669  0490               	iorwf	16,f	;volatile
  2168     066A                     l1248:
  2169                           
  2170                           ;./config.h: 74:     PIE1bits.TMR1IE = 1;
  2171     066A  1683               	bsf	3,5	;RP0=1, select bank1
  2172     066B  1303               	bcf	3,6	;RP1=0, select bank1
  2173     066C  140C               	bsf	12,0	;volatile
  2174     066D                     l1250:
  2175                           
  2176                           ;./config.h: 77:     PIR1bits.TMR1IF = 0;
  2177     066D  1283               	bcf	3,5	;RP0=0, select bank0
  2178     066E  1303               	bcf	3,6	;RP1=0, select bank0
  2179     066F  100C               	bcf	12,0	;volatile
  2180     0670                     l1252:
  2181                           
  2182                           ;./config.h: 80:     TMR1 = 0;
  2183     0670  018E               	clrf	14	;volatile
  2184     0671  018F               	clrf	15	;volatile
  2185     0672                     l1254:
  2186                           
  2187                           ;./config.h: 81:     T1CONbits.TMR1ON = 1;
  2188     0672  1410               	bsf	16,0	;volatile
  2189     0673                     l64:
  2190     0673  0008               	return
  2191     0674                     __end_of_TMR1_Initialize:
  2192                           
  2193                           	psect	text12
  2194     0681                     __ptext12:	
  2195 ;; *************** function _TMR0_Initialize *****************
  2196 ;; Defined at:
  2197 ;;		line 52 in file "./config.h"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;		None
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;		None
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      void 
  2204 ;; Registers used:
  2205 ;;		wreg, status,2, status,0
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2211 ;;      Params:         0       0       0       0
  2212 ;;      Locals:         0       0       0       0
  2213 ;;      Temps:          0       0       0       0
  2214 ;;      Totals:         0       0       0       0
  2215 ;;Total ram usage:        0 bytes
  2216 ;; Hardware stack levels used: 1
  2217 ;; Hardware stack levels required when called: 3
  2218 ;; This function calls:
  2219 ;;		Nothing
  2220 ;; This function is called by:
  2221 ;;		_main
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225     0681                     _TMR0_Initialize:	
  2226                           ;psect for function _TMR0_Initialize
  2227                           
  2228     0681                     l1234:	
  2229                           ;incstack = 0
  2230                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0]
  2231                           
  2232                           
  2233                           ;./config.h: 56:     OPTION_REGbits.PSA = 0;
  2234     0681  1683               	bsf	3,5	;RP0=1, select bank1
  2235     0682  1303               	bcf	3,6	;RP1=0, select bank1
  2236     0683  1181               	bcf	1,3	;volatile
  2237     0684                     l1236:
  2238                           
  2239                           ;./config.h: 57:     OPTION_REGbits.PS = 4;
  2240     0684  0801               	movf	1,w	;volatile
  2241     0685  39F8               	andlw	-8
  2242     0686  3804               	iorlw	4
  2243     0687  0081               	movwf	1	;volatile
  2244     0688                     l1238:
  2245                           
  2246                           ;./config.h: 58:     OPTION_REGbits.T0CS = 0;
  2247     0688  1281               	bcf	1,5	;volatile
  2248     0689                     l1240:
  2249                           
  2250                           ;./config.h: 61:     INTCONbits.T0IE = 1;
  2251     0689  168B               	bsf	11,5	;volatile
  2252     068A                     l1242:
  2253                           
  2254                           ;./config.h: 64:     INTCONbits.GIE = 1;
  2255     068A  178B               	bsf	11,7	;volatile
  2256     068B                     l61:
  2257     068B  0008               	return
  2258     068C                     __end_of_TMR0_Initialize:
  2259                           
  2260                           	psect	text13
  2261     0674                     __ptext13:	
  2262 ;; *************** function _CCP1_Initialize *****************
  2263 ;; Defined at:
  2264 ;;		line 33 in file "./config.h"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;		None
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;		None
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      void 
  2271 ;; Registers used:
  2272 ;;		wreg, status,2, status,0
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2278 ;;      Params:         0       0       0       0
  2279 ;;      Locals:         0       0       0       0
  2280 ;;      Temps:          0       0       0       0
  2281 ;;      Totals:         0       0       0       0
  2282 ;;Total ram usage:        0 bytes
  2283 ;; Hardware stack levels used: 1
  2284 ;; Hardware stack levels required when called: 3
  2285 ;; This function calls:
  2286 ;;		Nothing
  2287 ;; This function is called by:
  2288 ;;		_main
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292     0674                     _CCP1_Initialize:	
  2293                           ;psect for function _CCP1_Initialize
  2294                           
  2295     0674                     l1224:	
  2296                           ;incstack = 0
  2297                           ; Regs used in _CCP1_Initialize: [wreg+status,2+status,0]
  2298                           
  2299                           
  2300                           ;./config.h: 35:     CCP1CONbits.CCP1M = 0b0101;
  2301     0674  1283               	bcf	3,5	;RP0=0, select bank0
  2302     0675  1303               	bcf	3,6	;RP1=0, select bank0
  2303     0676  0817               	movf	23,w	;volatile
  2304     0677  39F0               	andlw	-16
  2305     0678  3805               	iorlw	5
  2306     0679  0097               	movwf	23	;volatile
  2307     067A                     l1226:
  2308                           
  2309                           ;./config.h: 39:     PIR1bits.CCP1IF = 0;
  2310     067A  110C               	bcf	12,2	;volatile
  2311     067B                     l1228:
  2312                           
  2313                           ;./config.h: 42:     PIE1bits.CCP1IE = 1;
  2314     067B  1683               	bsf	3,5	;RP0=1, select bank1
  2315     067C  1303               	bcf	3,6	;RP1=0, select bank1
  2316     067D  150C               	bsf	12,2	;volatile
  2317     067E                     l1230:
  2318                           
  2319                           ;./config.h: 46:     INTCONbits.GIE = 1;
  2320     067E  178B               	bsf	11,7	;volatile
  2321     067F                     l1232:
  2322                           
  2323                           ;./config.h: 47:     INTCONbits.PEIE = 1;
  2324     067F  170B               	bsf	11,6	;volatile
  2325     0680                     l58:
  2326     0680  0008               	return
  2327     0681                     __end_of_CCP1_Initialize:
  2328                           
  2329                           	psect	text14
  2330     0126                     __ptext14:	
  2331 ;; *************** function _ISR *****************
  2332 ;; Defined at:
  2333 ;;		line 79 in file "main.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;		None
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;		None
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  1    wreg      void 
  2340 ;; Registers used:
  2341 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2347 ;;      Params:         0       0       0       0
  2348 ;;      Locals:         0       0       0       0
  2349 ;;      Temps:          0      12       0       0
  2350 ;;      Totals:         0      12       0       0
  2351 ;;Total ram usage:       12 bytes
  2352 ;; Hardware stack levels used: 1
  2353 ;; Hardware stack levels required when called: 2
  2354 ;; This function calls:
  2355 ;;		_latchDisplay
  2356 ;;		_setNumberOfSamples
  2357 ;;		i1___lmul
  2358 ;; This function is called by:
  2359 ;;		Interrupt level 1
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363     0126                     _ISR:	
  2364                           ;psect for function _ISR
  2365                           
  2366     0126                     i1l1392:
  2367                           
  2368                           ;main.c: 81:     if (PIR1bits.CCP1IF)
  2369     0126  1D0C               	btfss	12,2	;volatile
  2370     0127  2929               	goto	u132_21
  2371     0128  292A               	goto	u132_20
  2372     0129                     u132_21:
  2373     0129  29C6               	goto	i1l132
  2374     012A                     u132_20:
  2375     012A                     i1l1394:
  2376                           
  2377                           ;main.c: 82:     {;main.c: 84:         static unsigned int initialCapture=0;;main.c: 86:
      +                                   if (initialCapture == 0) {
  2378     012A  0852               	movf	ISR@initialCapture,w
  2379     012B  0453               	iorwf	ISR@initialCapture+1,w
  2380     012C  1D03               	btfss	3,2
  2381     012D  292F               	goto	u133_21
  2382     012E  2930               	goto	u133_20
  2383     012F                     u133_21:
  2384     012F  2938               	goto	i1l1400
  2385     0130                     u133_20:
  2386     0130                     i1l1396:
  2387                           
  2388                           ;main.c: 87:             initialCapture = CCPR;
  2389     0130  0816               	movf	22,w	;volatile
  2390     0131  00D3               	movwf	ISR@initialCapture+1
  2391     0132  0815               	movf	21,w	;volatile
  2392     0133  00D2               	movwf	ISR@initialCapture
  2393     0134                     i1l1398:
  2394                           
  2395                           ;main.c: 88:             overflow_count=0;
  2396     0134  1683               	bsf	3,5	;RP0=1, select bank1
  2397     0135  1303               	bcf	3,6	;RP1=0, select bank1
  2398     0136  01B5               	clrf	_overflow_count^(0+128)
  2399                           
  2400                           ;main.c: 90:         }
  2401     0137  29C3               	goto	i1l1412
  2402     0138                     i1l1400:
  2403                           
  2404                           ;main.c: 93:             period = CCPR;
  2405     0138  0815               	movf	21,w	;volatile
  2406     0139  00CE               	movwf	_period
  2407     013A  0816               	movf	22,w	;volatile
  2408     013B  00CF               	movwf	_period+1
  2409     013C  01D0               	clrf	_period+2
  2410     013D  01D1               	clrf	_period+3
  2411                           
  2412                           ;main.c: 94:             period = period - initialCapture;
  2413     013E  0852               	movf	ISR@initialCapture,w
  2414     013F  00A8               	movwf	??_ISR
  2415     0140  0853               	movf	ISR@initialCapture+1,w
  2416     0141  00A9               	movwf	??_ISR+1
  2417     0142  01AA               	clrf	??_ISR+2
  2418     0143  01AB               	clrf	??_ISR+3
  2419     0144  084E               	movf	_period,w
  2420     0145  00AC               	movwf	??_ISR+4
  2421     0146  084F               	movf	_period+1,w
  2422     0147  00AD               	movwf	??_ISR+5
  2423     0148  0850               	movf	_period+2,w
  2424     0149  00AE               	movwf	??_ISR+6
  2425     014A  0851               	movf	_period+3,w
  2426     014B  00AF               	movwf	??_ISR+7
  2427     014C  0828               	movf	??_ISR,w
  2428     014D  02AC               	subwf	??_ISR+4,f
  2429     014E  0829               	movf	??_ISR+1,w
  2430     014F  1C03               	skipc
  2431     0150  0F29               	incfsz	??_ISR+1,w
  2432     0151  2953               	goto	u134_21
  2433     0152  2954               	goto	u134_22
  2434     0153                     u134_21:
  2435     0153  02AD               	subwf	??_ISR+5,f
  2436     0154                     u134_22:
  2437     0154  082A               	movf	??_ISR+2,w
  2438     0155  1C03               	skipc
  2439     0156  0F2A               	incfsz	??_ISR+2,w
  2440     0157  2959               	goto	u134_23
  2441     0158  295A               	goto	u134_24
  2442     0159                     u134_23:
  2443     0159  02AE               	subwf	??_ISR+6,f
  2444     015A                     u134_24:
  2445     015A  082B               	movf	??_ISR+3,w
  2446     015B  1C03               	skipc
  2447     015C  0F2B               	incfsz	??_ISR+3,w
  2448     015D  295F               	goto	u134_25
  2449     015E  2960               	goto	u134_26
  2450     015F                     u134_25:
  2451     015F  02AF               	subwf	??_ISR+7,f
  2452     0160                     u134_26:
  2453     0160  082F               	movf	??_ISR+7,w
  2454     0161  00D1               	movwf	_period+3
  2455     0162  082E               	movf	??_ISR+6,w
  2456     0163  00D0               	movwf	_period+2
  2457     0164  082D               	movf	??_ISR+5,w
  2458     0165  00CF               	movwf	_period+1
  2459     0166  082C               	movf	??_ISR+4,w
  2460     0167  00CE               	movwf	_period
  2461     0168                     i1l1402:
  2462                           
  2463                           ;main.c: 95:             if(overflow_count)
  2464     0168  1683               	bsf	3,5	;RP0=1, select bank1
  2465     0169  1303               	bcf	3,6	;RP1=0, select bank1
  2466     016A  0835               	movf	_overflow_count^(0+128),w
  2467     016B  1903               	btfsc	3,2
  2468     016C  296E               	goto	u135_21
  2469     016D  296F               	goto	u135_20
  2470     016E                     u135_21:
  2471     016E  29A2               	goto	i1l137
  2472     016F                     u135_20:
  2473     016F                     i1l1404:
  2474                           
  2475                           ;main.c: 96:                 period += ((unsigned long)overflow_count * 65535);
  2476     016F  0835               	movf	_overflow_count^(0+128),w
  2477     0170  1283               	bcf	3,5	;RP0=0, select bank0
  2478     0171  1303               	bcf	3,6	;RP1=0, select bank0
  2479     0172  00A8               	movwf	??_ISR
  2480     0173  01A9               	clrf	??_ISR+1
  2481     0174  01AA               	clrf	??_ISR+2
  2482     0175  01AB               	clrf	??_ISR+3
  2483     0176  082B               	movf	??_ISR+3,w
  2484     0177  00F3               	movwf	i1___lmul@multiplier+3
  2485     0178  082A               	movf	??_ISR+2,w
  2486     0179  00F2               	movwf	i1___lmul@multiplier+2
  2487     017A  0829               	movf	??_ISR+1,w
  2488     017B  00F1               	movwf	i1___lmul@multiplier+1
  2489     017C  0828               	movf	??_ISR,w
  2490     017D  00F0               	movwf	i1___lmul@multiplier
  2491     017E  3000               	movlw	0
  2492     017F  00F7               	movwf	i1___lmul@multiplicand+3
  2493     0180  3000               	movlw	0
  2494     0181  00F6               	movwf	i1___lmul@multiplicand+2
  2495     0182  30FF               	movlw	255
  2496     0183  00F5               	movwf	i1___lmul@multiplicand+1
  2497     0184  30FF               	movlw	255
  2498     0185  00F4               	movwf	i1___lmul@multiplicand
  2499     0186  118A  2533  118A   	fcall	i1___lmul
  2500     0189  0870               	movf	?i1___lmul,w
  2501     018A  1283               	bcf	3,5	;RP0=0, select bank0
  2502     018B  1303               	bcf	3,6	;RP1=0, select bank0
  2503     018C  07CE               	addwf	_period,f
  2504     018D  0871               	movf	?i1___lmul+1,w
  2505     018E  1103               	clrz
  2506     018F  1803               	skipnc
  2507     0190  3E01               	addlw	1
  2508     0191  1903               	skipnz
  2509     0192  2994               	goto	u136_21
  2510     0193  07CF               	addwf	_period+1,f
  2511     0194                     u136_21:
  2512     0194  0872               	movf	?i1___lmul+2,w
  2513     0195  1103               	clrz
  2514     0196  1803               	skipnc
  2515     0197  3E01               	addlw	1
  2516     0198  1903               	skipnz
  2517     0199  299B               	goto	u136_22
  2518     019A  07D0               	addwf	_period+2,f
  2519     019B                     u136_22:
  2520     019B  0873               	movf	?i1___lmul+3,w
  2521     019C  1103               	clrz
  2522     019D  1803               	skipnc
  2523     019E  3E01               	addlw	1
  2524     019F  1903               	skipnz
  2525     01A0  29A2               	goto	u136_23
  2526     01A1  07D1               	addwf	_period+3,f
  2527     01A2                     u136_23:
  2528     01A2                     i1l137:
  2529                           
  2530                           ;main.c: 99:             shouldUpdate = setNumberOfSamples(period,numberOfSamples);
  2531     01A2  1283               	bcf	3,5	;RP0=0, select bank0
  2532     01A3  0851               	movf	_period+3,w
  2533     01A4  00A3               	movwf	setNumberOfSamples@period+3
  2534     01A5  0850               	movf	_period+2,w
  2535     01A6  00A2               	movwf	setNumberOfSamples@period+2
  2536     01A7  084F               	movf	_period+1,w
  2537     01A8  00A1               	movwf	setNumberOfSamples@period+1
  2538     01A9  084E               	movf	_period,w
  2539     01AA  00A0               	movwf	setNumberOfSamples@period
  2540     01AB  085B               	movf	_numberOfSamples,w
  2541     01AC  00A8               	movwf	??_ISR
  2542     01AD  01A9               	clrf	??_ISR+1
  2543     01AE  0828               	movf	??_ISR,w
  2544     01AF  00A4               	movwf	setNumberOfSamples@samples
  2545     01B0  0829               	movf	??_ISR+1,w
  2546     01B1  00A5               	movwf	setNumberOfSamples@samples+1
  2547     01B2  118A  2360  118A   	fcall	_setNumberOfSamples
  2548     01B5  1683               	bsf	3,5	;RP0=1, select bank1
  2549     01B6  1303               	bcf	3,6	;RP1=0, select bank1
  2550     01B7  00B4               	movwf	_shouldUpdate^(0+128)
  2551     01B8                     i1l1406:
  2552                           
  2553                           ;main.c: 101:             initialCapture = 0;
  2554     01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2555     01B9  1303               	bcf	3,6	;RP1=0, select bank0
  2556     01BA  01D2               	clrf	ISR@initialCapture
  2557     01BB  01D3               	clrf	ISR@initialCapture+1
  2558     01BC                     i1l1408:
  2559                           
  2560                           ;main.c: 102:             overflow_count=0;
  2561     01BC  1683               	bsf	3,5	;RP0=1, select bank1
  2562     01BD  1303               	bcf	3,6	;RP1=0, select bank1
  2563     01BE  01B5               	clrf	_overflow_count^(0+128)
  2564     01BF                     i1l1410:
  2565                           
  2566                           ;main.c: 103:             TMR1=0;
  2567     01BF  1283               	bcf	3,5	;RP0=0, select bank0
  2568     01C0  1303               	bcf	3,6	;RP1=0, select bank0
  2569     01C1  018E               	clrf	14	;volatile
  2570     01C2  018F               	clrf	15	;volatile
  2571     01C3                     i1l1412:
  2572                           
  2573                           ;main.c: 106:         PIR1bits.CCP1IF = 0;
  2574     01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2575     01C4  110C               	bcf	12,2	;volatile
  2576                           
  2577                           ;main.c: 107:     }
  2578     01C5  29DE               	goto	i1l142
  2579     01C6                     i1l132:	
  2580                           ;main.c: 108:     else if (TMR1IF)
  2581                           
  2582     01C6  1C0C               	btfss	12,0	;volatile
  2583     01C7  29C9               	goto	u137_21
  2584     01C8  29CA               	goto	u137_20
  2585     01C9                     u137_21:
  2586     01C9  29D4               	goto	i1l139
  2587     01CA                     u137_20:
  2588     01CA                     i1l1414:
  2589                           
  2590                           ;main.c: 109:     {;main.c: 110:         overflow_count++;
  2591     01CA  3001               	movlw	1
  2592     01CB  00A8               	movwf	??_ISR
  2593     01CC  0828               	movf	??_ISR,w
  2594     01CD  1683               	bsf	3,5	;RP0=1, select bank1
  2595     01CE  1303               	bcf	3,6	;RP1=0, select bank1
  2596     01CF  07B5               	addwf	_overflow_count^(0+128),f
  2597     01D0                     i1l1416:
  2598                           
  2599                           ;main.c: 111:         TMR1IF = 0;
  2600     01D0  1283               	bcf	3,5	;RP0=0, select bank0
  2601     01D1  1303               	bcf	3,6	;RP1=0, select bank0
  2602     01D2  100C               	bcf	12,0	;volatile
  2603                           
  2604                           ;main.c: 112:     }
  2605     01D3  29DE               	goto	i1l142
  2606     01D4                     i1l139:	
  2607                           ;main.c: 113:     else if (INTCONbits.T0IF)
  2608                           
  2609     01D4  1D0B               	btfss	11,2	;volatile
  2610     01D5  29D7               	goto	u138_21
  2611     01D6  29D8               	goto	u138_20
  2612     01D7                     u138_21:
  2613     01D7  29DE               	goto	i1l142
  2614     01D8                     u138_20:
  2615     01D8                     i1l1418:
  2616                           
  2617                           ;main.c: 114:     {;main.c: 115:         TMR0 = 150;
  2618     01D8  3096               	movlw	150
  2619     01D9  0081               	movwf	1	;volatile
  2620     01DA                     i1l1420:
  2621                           
  2622                           ;main.c: 116:         latchDisplay();
  2623     01DA  118A  2039  118A   	fcall	_latchDisplay
  2624     01DD                     i1l1422:
  2625                           
  2626                           ;main.c: 117:         INTCONbits.T0IF = 0;
  2627     01DD  110B               	bcf	11,2	;volatile
  2628     01DE                     i1l142:
  2629     01DE  1283               	bcf	3,5	;RP0=0, select bank0
  2630     01DF  1303               	bcf	3,6	;RP1=0, select bank0
  2631     01E0  0833               	movf	??_ISR+11,w
  2632     01E1  00FF               	movwf	btemp+1
  2633     01E2  0832               	movf	??_ISR+10,w
  2634     01E3  008A               	movwf	10
  2635     01E4  0831               	movf	??_ISR+9,w
  2636     01E5  0084               	movwf	4
  2637     01E6  0E30               	swapf	??_ISR+8,w
  2638     01E7  0083               	movwf	3
  2639     01E8  0EFE               	swapf	btemp,f
  2640     01E9  0E7E               	swapf	btemp,w
  2641     01EA  0009               	retfie
  2642     01EB                     __end_of_ISR:
  2643                           
  2644                           	psect	intentry
  2645     0004                     __pintentry:	
  2646                           ;incstack = 0
  2647                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2648                           
  2649     0004                     interrupt_function:
  2650     007E                     saved_w	set	btemp
  2651     0004  00FE               	movwf	btemp
  2652     0005  0E03               	swapf	3,w
  2653     0006  1283               	bcf	3,5	;RP0=0, select bank0
  2654     0007  1303               	bcf	3,6	;RP1=0, select bank0
  2655     0008  00B0               	movwf	??_ISR+8
  2656     0009  0804               	movf	4,w
  2657     000A  00B1               	movwf	??_ISR+9
  2658     000B  080A               	movf	10,w
  2659     000C  00B2               	movwf	??_ISR+10
  2660     000D  087F               	movf	btemp+1,w
  2661     000E  00B3               	movwf	??_ISR+11
  2662     000F  118A  2926         	ljmp	_ISR
  2663                           
  2664                           	psect	text15
  2665     0533                     __ptext15:	
  2666 ;; *************** function i1___lmul *****************
  2667 ;; Defined at:
  2668 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  multiplier      4    0[COMMON] unsigned long 
  2671 ;;  multiplicand    4    4[COMMON] unsigned long 
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;  product         4    9[COMMON] unsigned long 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  4    0[COMMON] unsigned long 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2, status,0
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2683 ;;      Params:         8       0       0       0
  2684 ;;      Locals:         4       0       0       0
  2685 ;;      Temps:          1       0       0       0
  2686 ;;      Totals:        13       0       0       0
  2687 ;;Total ram usage:       13 bytes
  2688 ;; Hardware stack levels used: 1
  2689 ;; This function calls:
  2690 ;;		Nothing
  2691 ;; This function is called by:
  2692 ;;		_ISR
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696     0533                     i1___lmul:	
  2697                           ;psect for function i1___lmul
  2698                           
  2699     0533                     i1l1354:	
  2700                           ;incstack = 0
  2701                           ; Regs used in i1___lmul: [wreg+status,2+status,0]
  2702                           
  2703     0533  3000               	movlw	0
  2704     0534  00FC               	movwf	i1___lmul@product+3
  2705     0535  3000               	movlw	0
  2706     0536  00FB               	movwf	i1___lmul@product+2
  2707     0537  3000               	movlw	0
  2708     0538  00FA               	movwf	i1___lmul@product+1
  2709     0539  3000               	movlw	0
  2710     053A  00F9               	movwf	i1___lmul@product
  2711     053B                     i1l1356:
  2712     053B  1C70               	btfss	i1___lmul@multiplier,0
  2713     053C  2D3E               	goto	u123_21
  2714     053D  2D3F               	goto	u123_20
  2715     053E                     u123_21:
  2716     053E  2D56               	goto	i1l1360
  2717     053F                     u123_20:
  2718     053F                     i1l1358:
  2719     053F  0874               	movf	i1___lmul@multiplicand,w
  2720     0540  07F9               	addwf	i1___lmul@product,f
  2721     0541  0875               	movf	i1___lmul@multiplicand+1,w
  2722     0542  1103               	clrz
  2723     0543  1803               	skipnc
  2724     0544  3E01               	addlw	1
  2725     0545  1903               	skipnz
  2726     0546  2D48               	goto	u124_21
  2727     0547  07FA               	addwf	i1___lmul@product+1,f
  2728     0548                     u124_21:
  2729     0548  0876               	movf	i1___lmul@multiplicand+2,w
  2730     0549  1103               	clrz
  2731     054A  1803               	skipnc
  2732     054B  3E01               	addlw	1
  2733     054C  1903               	skipnz
  2734     054D  2D4F               	goto	u124_22
  2735     054E  07FB               	addwf	i1___lmul@product+2,f
  2736     054F                     u124_22:
  2737     054F  0877               	movf	i1___lmul@multiplicand+3,w
  2738     0550  1103               	clrz
  2739     0551  1803               	skipnc
  2740     0552  3E01               	addlw	1
  2741     0553  1903               	skipnz
  2742     0554  2D56               	goto	u124_23
  2743     0555  07FC               	addwf	i1___lmul@product+3,f
  2744     0556                     u124_23:
  2745     0556                     i1l1360:
  2746     0556  3001               	movlw	1
  2747     0557  00F8               	movwf	??i1___lmul
  2748     0558                     u125_25:
  2749     0558  1003               	clrc
  2750     0559  0DF4               	rlf	i1___lmul@multiplicand,f
  2751     055A  0DF5               	rlf	i1___lmul@multiplicand+1,f
  2752     055B  0DF6               	rlf	i1___lmul@multiplicand+2,f
  2753     055C  0DF7               	rlf	i1___lmul@multiplicand+3,f
  2754     055D  0BF8               	decfsz	??i1___lmul,f
  2755     055E  2D58               	goto	u125_25
  2756     055F                     i1l1362:
  2757     055F  3001               	movlw	1
  2758     0560                     u126_25:
  2759     0560  1003               	clrc
  2760     0561  0CF3               	rrf	i1___lmul@multiplier+3,f
  2761     0562  0CF2               	rrf	i1___lmul@multiplier+2,f
  2762     0563  0CF1               	rrf	i1___lmul@multiplier+1,f
  2763     0564  0CF0               	rrf	i1___lmul@multiplier,f
  2764     0565  3EFF               	addlw	-1
  2765     0566  1D03               	skipz
  2766     0567  2D60               	goto	u126_25
  2767     0568  0873               	movf	i1___lmul@multiplier+3,w
  2768     0569  0472               	iorwf	i1___lmul@multiplier+2,w
  2769     056A  0471               	iorwf	i1___lmul@multiplier+1,w
  2770     056B  0470               	iorwf	i1___lmul@multiplier,w
  2771     056C  1D03               	skipz
  2772     056D  2D6F               	goto	u127_21
  2773     056E  2D70               	goto	u127_20
  2774     056F                     u127_21:
  2775     056F  2D3B               	goto	i1l1356
  2776     0570                     u127_20:
  2777     0570                     i1l1364:
  2778     0570  087C               	movf	i1___lmul@product+3,w
  2779     0571  00F3               	movwf	?i1___lmul+3
  2780     0572  087B               	movf	i1___lmul@product+2,w
  2781     0573  00F2               	movwf	?i1___lmul+2
  2782     0574  087A               	movf	i1___lmul@product+1,w
  2783     0575  00F1               	movwf	?i1___lmul+1
  2784     0576  0879               	movf	i1___lmul@product,w
  2785     0577  00F0               	movwf	?i1___lmul
  2786     0578                     i1l260:
  2787     0578  0008               	return
  2788     0579                     __end_ofi1___lmul:
  2789                           
  2790                           	psect	text16
  2791     0360                     __ptext16:	
  2792 ;; *************** function _setNumberOfSamples *****************
  2793 ;; Defined at:
  2794 ;;		line 143 in file "main.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  period          4    0[BANK0 ] unsigned long 
  2797 ;;  samples         2    4[BANK0 ] int 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;		None
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      _Bool 
  2802 ;; Registers used:
  2803 ;;		wreg, status,2, status,0, pclath, cstack
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2809 ;;      Params:         0       6       0       0
  2810 ;;      Locals:         0       0       0       0
  2811 ;;      Temps:          0       2       0       0
  2812 ;;      Totals:         0       8       0       0
  2813 ;;Total ram usage:        8 bytes
  2814 ;; Hardware stack levels used: 1
  2815 ;; Hardware stack levels required when called: 1
  2816 ;; This function calls:
  2817 ;;		i1___lldiv
  2818 ;; This function is called by:
  2819 ;;		_ISR
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823     0360                     _setNumberOfSamples:	
  2824                           ;psect for function _setNumberOfSamples
  2825                           
  2826     0360                     i1l1334:	
  2827                           ;incstack = 0
  2828                           ; Regs used in _setNumberOfSamples: [wreg+status,2+status,0+pclath+cstack]
  2829                           
  2830                           
  2831                           ;main.c: 144:     period = period / samples;
  2832     0360  1283               	bcf	3,5	;RP0=0, select bank0
  2833     0361  1303               	bcf	3,6	;RP1=0, select bank0
  2834     0362  0824               	movf	setNumberOfSamples@samples,w
  2835     0363  00F0               	movwf	i1___lldiv@divisor
  2836     0364  0825               	movf	setNumberOfSamples@samples+1,w
  2837     0365  00F1               	movwf	i1___lldiv@divisor+1
  2838     0366  3000               	movlw	0
  2839     0367  1BF1               	btfsc	i1___lldiv@divisor+1,7
  2840     0368  30FF               	movlw	255
  2841     0369  00F2               	movwf	i1___lldiv@divisor+2
  2842     036A  00F3               	movwf	i1___lldiv@divisor+3
  2843     036B  0823               	movf	setNumberOfSamples@period+3,w
  2844     036C  00F7               	movwf	i1___lldiv@dividend+3
  2845     036D  0822               	movf	setNumberOfSamples@period+2,w
  2846     036E  00F6               	movwf	i1___lldiv@dividend+2
  2847     036F  0821               	movf	setNumberOfSamples@period+1,w
  2848     0370  00F5               	movwf	i1___lldiv@dividend+1
  2849     0371  0820               	movf	setNumberOfSamples@period,w
  2850     0372  00F4               	movwf	i1___lldiv@dividend
  2851     0373  118A  243F  118A   	fcall	i1___lldiv
  2852     0376  0873               	movf	?i1___lldiv+3,w
  2853     0377  1283               	bcf	3,5	;RP0=0, select bank0
  2854     0378  1303               	bcf	3,6	;RP1=0, select bank0
  2855     0379  00A3               	movwf	setNumberOfSamples@period+3
  2856     037A  0872               	movf	?i1___lldiv+2,w
  2857     037B  00A2               	movwf	setNumberOfSamples@period+2
  2858     037C  0871               	movf	?i1___lldiv+1,w
  2859     037D  00A1               	movwf	setNumberOfSamples@period+1
  2860     037E  0870               	movf	?i1___lldiv,w
  2861     037F  00A0               	movwf	setNumberOfSamples@period
  2862     0380                     i1l1336:
  2863                           
  2864                           ;main.c: 145:     if(period < 9000)
  2865     0380  0823               	movf	setNumberOfSamples@period+3,w
  2866     0381  1D03               	btfss	3,2
  2867     0382  2B91               	goto	u119_21
  2868     0383  0822               	movf	setNumberOfSamples@period+2,w
  2869     0384  1D03               	btfss	3,2
  2870     0385  2B91               	goto	u119_21
  2871     0386  3023               	movlw	35
  2872     0387  0221               	subwf	setNumberOfSamples@period+1,w
  2873     0388  1D03               	skipz
  2874     0389  2B8E               	goto	u119_23
  2875     038A  3028               	movlw	40
  2876     038B  0220               	subwf	setNumberOfSamples@period,w
  2877     038C  1D03               	skipz
  2878     038D  2B8E               	goto	u119_23
  2879     038E                     u119_23:
  2880     038E  1803               	btfsc	3,0
  2881     038F  2B91               	goto	u119_21
  2882     0390  2B92               	goto	u119_20
  2883     0391                     u119_21:
  2884     0391  2B9B               	goto	i1l1342
  2885     0392                     u119_20:
  2886     0392                     i1l1338:
  2887                           
  2888                           ;main.c: 146:     {;main.c: 147:         numberOfSamples = 16;
  2889     0392  3010               	movlw	16
  2890     0393  1283               	bcf	3,5	;RP0=0, select bank0
  2891     0394  1303               	bcf	3,6	;RP1=0, select bank0
  2892     0395  00DB               	movwf	_numberOfSamples
  2893     0396                     i1l1340:
  2894                           
  2895                           ;main.c: 148:         CCP1CONbits.CCP1M = 0b0111;
  2896     0396  0817               	movf	23,w	;volatile
  2897     0397  39F0               	andlw	-16
  2898     0398  3807               	iorlw	7
  2899     0399  0097               	movwf	23	;volatile
  2900                           
  2901                           ;main.c: 149:     }
  2902     039A  2BC0               	goto	i1l1350
  2903     039B                     i1l1342:
  2904     039B  1283               	bcf	3,5	;RP0=0, select bank0
  2905     039C  1303               	bcf	3,6	;RP1=0, select bank0
  2906     039D  0823               	movf	setNumberOfSamples@period+3,w
  2907     039E  1D03               	btfss	3,2
  2908     039F  2BAE               	goto	u120_21
  2909     03A0  0822               	movf	setNumberOfSamples@period+2,w
  2910     03A1  1D03               	btfss	3,2
  2911     03A2  2BAE               	goto	u120_21
  2912     03A3  308C               	movlw	140
  2913     03A4  0221               	subwf	setNumberOfSamples@period+1,w
  2914     03A5  1D03               	skipz
  2915     03A6  2BAB               	goto	u120_23
  2916     03A7  30A0               	movlw	160
  2917     03A8  0220               	subwf	setNumberOfSamples@period,w
  2918     03A9  1D03               	skipz
  2919     03AA  2BAB               	goto	u120_23
  2920     03AB                     u120_23:
  2921     03AB  1803               	btfsc	3,0
  2922     03AC  2BAE               	goto	u120_21
  2923     03AD  2BAF               	goto	u120_20
  2924     03AE                     u120_21:
  2925     03AE  2BB8               	goto	i1l158
  2926     03AF                     u120_20:
  2927     03AF                     i1l1344:
  2928                           
  2929                           ;main.c: 151:     {;main.c: 152:         numberOfSamples = 4;
  2930     03AF  3004               	movlw	4
  2931     03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2932     03B1  1303               	bcf	3,6	;RP1=0, select bank0
  2933     03B2  00DB               	movwf	_numberOfSamples
  2934     03B3                     i1l1346:
  2935                           
  2936                           ;main.c: 153:         CCP1CONbits.CCP1M = 0b0110;
  2937     03B3  0817               	movf	23,w	;volatile
  2938     03B4  39F0               	andlw	-16
  2939     03B5  3806               	iorlw	6
  2940     03B6  0097               	movwf	23	;volatile
  2941                           
  2942                           ;main.c: 154:     }
  2943     03B7  2BC0               	goto	i1l1350
  2944     03B8                     i1l158:	
  2945                           ;main.c: 155:     else
  2946                           
  2947                           
  2948                           ;main.c: 156:     {;main.c: 157:         numberOfSamples = 1;
  2949     03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2950     03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2951     03BA  01DB               	clrf	_numberOfSamples
  2952     03BB  0ADB               	incf	_numberOfSamples,f
  2953     03BC                     i1l1348:
  2954                           
  2955                           ;main.c: 158:         CCP1CONbits.CCP1M = 0b0101;
  2956     03BC  0817               	movf	23,w	;volatile
  2957     03BD  39F0               	andlw	-16
  2958     03BE  3805               	iorlw	5
  2959     03BF  0097               	movwf	23	;volatile
  2960     03C0                     i1l1350:
  2961                           
  2962                           ;main.c: 161:     return numberOfSamples == samples;
  2963     03C0  085B               	movf	_numberOfSamples,w
  2964     03C1  00A6               	movwf	??_setNumberOfSamples
  2965     03C2  01A7               	clrf	??_setNumberOfSamples+1
  2966     03C3  0825               	movf	setNumberOfSamples@samples+1,w
  2967     03C4  0627               	xorwf	??_setNumberOfSamples+1,w
  2968     03C5  1D03               	skipz
  2969     03C6  2BC9               	goto	u121_25
  2970     03C7  0824               	movf	setNumberOfSamples@samples,w
  2971     03C8  0626               	xorwf	??_setNumberOfSamples,w
  2972     03C9                     u121_25:
  2973     03C9  1903               	skipnz
  2974     03CA  2BCC               	goto	u121_21
  2975     03CB  2BCE               	goto	u121_20
  2976     03CC                     u121_21:
  2977     03CC  3001               	movlw	1
  2978     03CD  2BCF               	goto	u122_20
  2979     03CE                     u121_20:
  2980     03CE  3000               	movlw	0
  2981     03CF                     u122_20:
  2982     03CF                     i1l160:
  2983     03CF  0008               	return
  2984     03D0                     __end_of_setNumberOfSamples:
  2985                           
  2986                           	psect	text17
  2987     043F                     __ptext17:	
  2988 ;; *************** function i1___lldiv *****************
  2989 ;; Defined at:
  2990 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;  divisor         4    0[COMMON] unsigned long 
  2993 ;;  dividend        4    4[COMMON] unsigned long 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  quotient        4    9[COMMON] unsigned long 
  2996 ;;  counter         1   13[COMMON] unsigned char 
  2997 ;; Return value:  Size  Location     Type
  2998 ;;                  4    0[COMMON] unsigned long 
  2999 ;; Registers used:
  3000 ;;		wreg, status,2, status,0
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3006 ;;      Params:         8       0       0       0
  3007 ;;      Locals:         5       0       0       0
  3008 ;;      Temps:          1       0       0       0
  3009 ;;      Totals:        14       0       0       0
  3010 ;;Total ram usage:       14 bytes
  3011 ;; Hardware stack levels used: 1
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_setNumberOfSamples
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019     043F                     i1___lldiv:	
  3020                           ;psect for function i1___lldiv
  3021                           
  3022     043F                     i1l1190:	
  3023                           ;incstack = 0
  3024                           ; Regs used in i1___lldiv: [wreg+status,2+status,0]
  3025                           
  3026     043F  3000               	movlw	0
  3027     0440  00FC               	movwf	i1___lldiv@quotient+3
  3028     0441  3000               	movlw	0
  3029     0442  00FB               	movwf	i1___lldiv@quotient+2
  3030     0443  3000               	movlw	0
  3031     0444  00FA               	movwf	i1___lldiv@quotient+1
  3032     0445  3000               	movlw	0
  3033     0446  00F9               	movwf	i1___lldiv@quotient
  3034     0447  0873               	movf	i1___lldiv@divisor+3,w
  3035     0448  0472               	iorwf	i1___lldiv@divisor+2,w
  3036     0449  0471               	iorwf	i1___lldiv@divisor+1,w
  3037     044A  0470               	iorwf	i1___lldiv@divisor,w
  3038     044B  1903               	skipnz
  3039     044C  2C4E               	goto	u96_21
  3040     044D  2C4F               	goto	u96_20
  3041     044E                     u96_21:
  3042     044E  2C9C               	goto	i1l1210
  3043     044F                     u96_20:
  3044     044F                     i1l1192:
  3045     044F  01FD               	clrf	i1___lldiv@counter
  3046     0450  0AFD               	incf	i1___lldiv@counter,f
  3047     0451  2C5F               	goto	i1l1196
  3048     0452                     i1l1194:
  3049     0452  3001               	movlw	1
  3050     0453  00F8               	movwf	??i1___lldiv
  3051     0454                     u97_25:
  3052     0454  1003               	clrc
  3053     0455  0DF0               	rlf	i1___lldiv@divisor,f
  3054     0456  0DF1               	rlf	i1___lldiv@divisor+1,f
  3055     0457  0DF2               	rlf	i1___lldiv@divisor+2,f
  3056     0458  0DF3               	rlf	i1___lldiv@divisor+3,f
  3057     0459  0BF8               	decfsz	??i1___lldiv,f
  3058     045A  2C54               	goto	u97_25
  3059     045B  3001               	movlw	1
  3060     045C  00F8               	movwf	??i1___lldiv
  3061     045D  0878               	movf	??i1___lldiv,w
  3062     045E  07FD               	addwf	i1___lldiv@counter,f
  3063     045F                     i1l1196:
  3064     045F  1FF3               	btfss	i1___lldiv@divisor+3,7
  3065     0460  2C62               	goto	u98_21
  3066     0461  2C63               	goto	u98_20
  3067     0462                     u98_21:
  3068     0462  2C52               	goto	i1l1194
  3069     0463                     u98_20:
  3070     0463                     i1l1198:
  3071     0463  3001               	movlw	1
  3072     0464  00F8               	movwf	??i1___lldiv
  3073     0465                     u99_25:
  3074     0465  1003               	clrc
  3075     0466  0DF9               	rlf	i1___lldiv@quotient,f
  3076     0467  0DFA               	rlf	i1___lldiv@quotient+1,f
  3077     0468  0DFB               	rlf	i1___lldiv@quotient+2,f
  3078     0469  0DFC               	rlf	i1___lldiv@quotient+3,f
  3079     046A  0BF8               	decfsz	??i1___lldiv,f
  3080     046B  2C65               	goto	u99_25
  3081     046C                     i1l1200:
  3082     046C  0873               	movf	i1___lldiv@divisor+3,w
  3083     046D  0277               	subwf	i1___lldiv@dividend+3,w
  3084     046E  1D03               	skipz
  3085     046F  2C7A               	goto	u100_25
  3086     0470  0872               	movf	i1___lldiv@divisor+2,w
  3087     0471  0276               	subwf	i1___lldiv@dividend+2,w
  3088     0472  1D03               	skipz
  3089     0473  2C7A               	goto	u100_25
  3090     0474  0871               	movf	i1___lldiv@divisor+1,w
  3091     0475  0275               	subwf	i1___lldiv@dividend+1,w
  3092     0476  1D03               	skipz
  3093     0477  2C7A               	goto	u100_25
  3094     0478  0870               	movf	i1___lldiv@divisor,w
  3095     0479  0274               	subwf	i1___lldiv@dividend,w
  3096     047A                     u100_25:
  3097     047A  1C03               	skipc
  3098     047B  2C7D               	goto	u100_21
  3099     047C  2C7E               	goto	u100_20
  3100     047D                     u100_21:
  3101     047D  2C8D               	goto	i1l1206
  3102     047E                     u100_20:
  3103     047E                     i1l1202:
  3104     047E  0870               	movf	i1___lldiv@divisor,w
  3105     047F  02F4               	subwf	i1___lldiv@dividend,f
  3106     0480  0871               	movf	i1___lldiv@divisor+1,w
  3107     0481  1C03               	skipc
  3108     0482  0F71               	incfsz	i1___lldiv@divisor+1,w
  3109     0483  02F5               	subwf	i1___lldiv@dividend+1,f
  3110     0484  0872               	movf	i1___lldiv@divisor+2,w
  3111     0485  1C03               	skipc
  3112     0486  0F72               	incfsz	i1___lldiv@divisor+2,w
  3113     0487  02F6               	subwf	i1___lldiv@dividend+2,f
  3114     0488  0873               	movf	i1___lldiv@divisor+3,w
  3115     0489  1C03               	skipc
  3116     048A  0F73               	incfsz	i1___lldiv@divisor+3,w
  3117     048B  02F7               	subwf	i1___lldiv@dividend+3,f
  3118     048C                     i1l1204:
  3119     048C  1479               	bsf	i1___lldiv@quotient,0
  3120     048D                     i1l1206:
  3121     048D  3001               	movlw	1
  3122     048E                     u101_25:
  3123     048E  1003               	clrc
  3124     048F  0CF3               	rrf	i1___lldiv@divisor+3,f
  3125     0490  0CF2               	rrf	i1___lldiv@divisor+2,f
  3126     0491  0CF1               	rrf	i1___lldiv@divisor+1,f
  3127     0492  0CF0               	rrf	i1___lldiv@divisor,f
  3128     0493  3EFF               	addlw	-1
  3129     0494  1D03               	skipz
  3130     0495  2C8E               	goto	u101_25
  3131     0496                     i1l1208:
  3132     0496  3001               	movlw	1
  3133     0497  02FD               	subwf	i1___lldiv@counter,f
  3134     0498  1D03               	btfss	3,2
  3135     0499  2C9B               	goto	u102_21
  3136     049A  2C9C               	goto	u102_20
  3137     049B                     u102_21:
  3138     049B  2C63               	goto	i1l1198
  3139     049C                     u102_20:
  3140     049C                     i1l1210:
  3141     049C  087C               	movf	i1___lldiv@quotient+3,w
  3142     049D  00F3               	movwf	?i1___lldiv+3
  3143     049E  087B               	movf	i1___lldiv@quotient+2,w
  3144     049F  00F2               	movwf	?i1___lldiv+2
  3145     04A0  087A               	movf	i1___lldiv@quotient+1,w
  3146     04A1  00F1               	movwf	?i1___lldiv+1
  3147     04A2  0879               	movf	i1___lldiv@quotient,w
  3148     04A3  00F0               	movwf	?i1___lldiv
  3149     04A4                     i1l282:
  3150     04A4  0008               	return
  3151     04A5                     __end_ofi1___lldiv:
  3152                           
  3153                           	psect	text18
  3154     0039                     __ptext18:	
  3155 ;; *************** function _latchDisplay *****************
  3156 ;; Defined at:
  3157 ;;		line 56 in file "./display.h"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  value           1    2[COMMON] unsigned char 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3171 ;;      Params:         0       0       0       0
  3172 ;;      Locals:         1       0       0       0
  3173 ;;      Temps:          2       0       0       0
  3174 ;;      Totals:         3       0       0       0
  3175 ;;Total ram usage:        3 bytes
  3176 ;; Hardware stack levels used: 2
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_ISR
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184     0039                     _latchDisplay:	
  3185                           ;psect for function _latchDisplay
  3186                           
  3187     0039                     i1l1256:	
  3188                           ;incstack = 0
  3189                           ; Regs used in _latchDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3190                           
  3191                           
  3192                           ;./display.h: 58:     static int turn=0;;./display.h: 59:     unsigned char value;;./dis
      +                          play.h: 61:     if(turn>3)
  3193     0039  1283               	bcf	3,5	;RP0=0, select bank0
  3194     003A  1303               	bcf	3,6	;RP1=0, select bank0
  3195     003B  0855               	movf	latchDisplay@turn+1,w
  3196     003C  3A80               	xorlw	128
  3197     003D  00FF               	movwf	btemp+1
  3198     003E  3080               	movlw	128
  3199     003F  027F               	subwf	btemp+1,w
  3200     0040  1D03               	skipz
  3201     0041  2844               	goto	u103_25
  3202     0042  3004               	movlw	4
  3203     0043  0254               	subwf	latchDisplay@turn,w
  3204     0044                     u103_25:
  3205     0044  1C03               	skipc
  3206     0045  2847               	goto	u103_21
  3207     0046  2848               	goto	u103_20
  3208     0047                     u103_21:
  3209     0047  2852               	goto	i1l1260
  3210     0048                     u103_20:
  3211     0048                     i1l1258:
  3212                           
  3213                           ;./display.h: 62:         value = indicators[selectedIndicator];
  3214     0048  1683               	bsf	3,5	;RP0=1, select bank1
  3215     0049  1303               	bcf	3,6	;RP1=0, select bank1
  3216     004A  0832               	movf	_selectedIndicator^(0+128),w
  3217     004B  3E15               	addlw	low ((_indicators-__stringbase)| (0+32768))
  3218     004C  0084               	movwf	4
  3219     004D  118A  2600  118A   	fcall	stringdir
  3220     0050  00F2               	movwf	latchDisplay@value
  3221     0051  285F               	goto	i1l1262
  3222     0052                     i1l1260:
  3223                           
  3224                           ;./display.h: 64:         value = digits[display[turn]];
  3225     0052  1283               	bcf	3,5	;RP0=0, select bank0
  3226     0053  1303               	bcf	3,6	;RP1=0, select bank0
  3227     0054  0854               	movf	latchDisplay@turn,w
  3228     0055  3E57               	addlw	(low (_display| 0))& (0+255)
  3229     0056  0084               	movwf	4
  3230     0057  1383               	bcf	3,7	;select IRP bank0
  3231     0058  0800               	movf	0,w
  3232     0059  3E0B               	addlw	low ((_digits-__stringbase)| (0+32768))
  3233     005A  0084               	movwf	4
  3234     005B  118A  2600  118A   	fcall	stringdir
  3235     005E  00F2               	movwf	latchDisplay@value
  3236     005F                     i1l1262:
  3237                           
  3238                           ;./display.h: 67:     PORTCbits.RC1 = PORTCbits.RC0 = PORTAbits.RA2 = PORTAbits.RA1 = PO
      +                          RTAbits.RA0= 1;
  3239     005F  1283               	bcf	3,5	;RP0=0, select bank0
  3240     0060  1405               	bsf	5,0	;volatile
  3241     0061  1805               	btfsc	5,0	;volatile
  3242     0062  2864               	goto	u104_21
  3243     0063  2868               	goto	u104_20
  3244     0064                     u104_21:
  3245     0064  1283               	bcf	3,5	;RP0=0, select bank0
  3246     0065  1303               	bcf	3,6	;RP1=0, select bank0
  3247     0066  1485               	bsf	5,1	;volatile
  3248     0067  286B               	goto	u105_24
  3249     0068                     u104_20:
  3250     0068  1283               	bcf	3,5	;RP0=0, select bank0
  3251     0069  1303               	bcf	3,6	;RP1=0, select bank0
  3252     006A  1085               	bcf	5,1	;volatile
  3253     006B                     u105_24:
  3254     006B  1885               	btfsc	5,1	;volatile
  3255     006C  286E               	goto	u105_21
  3256     006D  2872               	goto	u105_20
  3257     006E                     u105_21:
  3258     006E  1283               	bcf	3,5	;RP0=0, select bank0
  3259     006F  1303               	bcf	3,6	;RP1=0, select bank0
  3260     0070  1505               	bsf	5,2	;volatile
  3261     0071  2875               	goto	u106_24
  3262     0072                     u105_20:
  3263     0072  1283               	bcf	3,5	;RP0=0, select bank0
  3264     0073  1303               	bcf	3,6	;RP1=0, select bank0
  3265     0074  1105               	bcf	5,2	;volatile
  3266     0075                     u106_24:
  3267     0075  1905               	btfsc	5,2	;volatile
  3268     0076  2878               	goto	u106_21
  3269     0077  287C               	goto	u106_20
  3270     0078                     u106_21:
  3271     0078  1283               	bcf	3,5	;RP0=0, select bank0
  3272     0079  1303               	bcf	3,6	;RP1=0, select bank0
  3273     007A  1407               	bsf	7,0	;volatile
  3274     007B  287F               	goto	u107_24
  3275     007C                     u106_20:
  3276     007C  1283               	bcf	3,5	;RP0=0, select bank0
  3277     007D  1303               	bcf	3,6	;RP1=0, select bank0
  3278     007E  1007               	bcf	7,0	;volatile
  3279     007F                     u107_24:
  3280     007F  1807               	btfsc	7,0	;volatile
  3281     0080  2882               	goto	u107_21
  3282     0081  2886               	goto	u107_20
  3283     0082                     u107_21:
  3284     0082  1283               	bcf	3,5	;RP0=0, select bank0
  3285     0083  1303               	bcf	3,6	;RP1=0, select bank0
  3286     0084  1487               	bsf	7,1	;volatile
  3287     0085  2889               	goto	u108_24
  3288     0086                     u107_20:
  3289     0086  1283               	bcf	3,5	;RP0=0, select bank0
  3290     0087  1303               	bcf	3,6	;RP1=0, select bank0
  3291     0088  1087               	bcf	7,1	;volatile
  3292     0089                     u108_24:
  3293     0089                     i1l1264:
  3294                           
  3295                           ;./display.h: 70:     PORTCbits.RC4 = (value >> 0) & 0x01;
  3296     0089  0872               	movf	latchDisplay@value,w
  3297     008A  3901               	andlw	1
  3298     008B  00F0               	movwf	??_latchDisplay
  3299     008C  0EF0               	swapf	??_latchDisplay,f
  3300     008D  0807               	movf	7,w	;volatile
  3301     008E  0670               	xorwf	??_latchDisplay,w
  3302     008F  39EF               	andlw	-17
  3303     0090  0670               	xorwf	??_latchDisplay,w
  3304     0091  0087               	movwf	7	;volatile
  3305     0092                     i1l1266:
  3306                           
  3307                           ;./display.h: 71:     PORTCbits.RC6 = (value >> 1) & 0x01;
  3308     0092  0872               	movf	latchDisplay@value,w
  3309     0093  00F0               	movwf	??_latchDisplay
  3310     0094  1003               	clrc
  3311     0095  0C70               	rrf	??_latchDisplay,w
  3312     0096  3901               	andlw	1
  3313     0097  00F1               	movwf	??_latchDisplay+1
  3314     0098  0EF1               	swapf	??_latchDisplay+1,f
  3315     0099  0DF1               	rlf	??_latchDisplay+1,f
  3316     009A  0DF1               	rlf	??_latchDisplay+1,f
  3317     009B  0807               	movf	7,w	;volatile
  3318     009C  0671               	xorwf	??_latchDisplay+1,w
  3319     009D  39BF               	andlw	-65
  3320     009E  0671               	xorwf	??_latchDisplay+1,w
  3321     009F  0087               	movwf	7	;volatile
  3322     00A0                     i1l1268:
  3323                           
  3324                           ;./display.h: 72:     PORTBbits.RB6 = (value >> 2) & 0x01;
  3325     00A0  0872               	movf	latchDisplay@value,w
  3326     00A1  00F0               	movwf	??_latchDisplay
  3327     00A2  3002               	movlw	2
  3328     00A3                     u109_25:
  3329     00A3  1003               	clrc
  3330     00A4  0CF0               	rrf	??_latchDisplay,f
  3331     00A5  3EFF               	addlw	-1
  3332     00A6  1D03               	skipz
  3333     00A7  28A3               	goto	u109_25
  3334     00A8  0870               	movf	??_latchDisplay,w
  3335     00A9  3901               	andlw	1
  3336     00AA  00F1               	movwf	??_latchDisplay+1
  3337     00AB  0EF1               	swapf	??_latchDisplay+1,f
  3338     00AC  0DF1               	rlf	??_latchDisplay+1,f
  3339     00AD  0DF1               	rlf	??_latchDisplay+1,f
  3340     00AE  0806               	movf	6,w	;volatile
  3341     00AF  0671               	xorwf	??_latchDisplay+1,w
  3342     00B0  39BF               	andlw	-65
  3343     00B1  0671               	xorwf	??_latchDisplay+1,w
  3344     00B2  0086               	movwf	6	;volatile
  3345     00B3                     i1l1270:
  3346                           
  3347                           ;./display.h: 73:     PORTBbits.RB4 = (value >> 3) & 0x01;
  3348     00B3  0872               	movf	latchDisplay@value,w
  3349     00B4  00F0               	movwf	??_latchDisplay
  3350     00B5  3003               	movlw	3
  3351     00B6                     u110_25:
  3352     00B6  1003               	clrc
  3353     00B7  0CF0               	rrf	??_latchDisplay,f
  3354     00B8  3EFF               	addlw	-1
  3355     00B9  1D03               	skipz
  3356     00BA  28B6               	goto	u110_25
  3357     00BB  0870               	movf	??_latchDisplay,w
  3358     00BC  3901               	andlw	1
  3359     00BD  00F1               	movwf	??_latchDisplay+1
  3360     00BE  0EF1               	swapf	??_latchDisplay+1,f
  3361     00BF  0806               	movf	6,w	;volatile
  3362     00C0  0671               	xorwf	??_latchDisplay+1,w
  3363     00C1  39EF               	andlw	-17
  3364     00C2  0671               	xorwf	??_latchDisplay+1,w
  3365     00C3  0086               	movwf	6	;volatile
  3366     00C4                     i1l1272:
  3367                           
  3368                           ;./display.h: 74:     PORTCbits.RC2 = (value >> 4) & 0x01;
  3369     00C4  0872               	movf	latchDisplay@value,w
  3370     00C5  00F0               	movwf	??_latchDisplay
  3371     00C6  3004               	movlw	4
  3372     00C7                     u111_25:
  3373     00C7  1003               	clrc
  3374     00C8  0CF0               	rrf	??_latchDisplay,f
  3375     00C9  3EFF               	addlw	-1
  3376     00CA  1D03               	skipz
  3377     00CB  28C7               	goto	u111_25
  3378     00CC  0870               	movf	??_latchDisplay,w
  3379     00CD  3901               	andlw	1
  3380     00CE  00F1               	movwf	??_latchDisplay+1
  3381     00CF  0DF1               	rlf	??_latchDisplay+1,f
  3382     00D0  0DF1               	rlf	??_latchDisplay+1,f
  3383     00D1  0807               	movf	7,w	;volatile
  3384     00D2  0671               	xorwf	??_latchDisplay+1,w
  3385     00D3  39FB               	andlw	-5
  3386     00D4  0671               	xorwf	??_latchDisplay+1,w
  3387     00D5  0087               	movwf	7	;volatile
  3388     00D6                     i1l1274:
  3389                           
  3390                           ;./display.h: 75:     PORTCbits.RC3 = (value >> 5) & 0x01;
  3391     00D6  0872               	movf	latchDisplay@value,w
  3392     00D7  00F0               	movwf	??_latchDisplay
  3393     00D8  3005               	movlw	5
  3394     00D9                     u112_25:
  3395     00D9  1003               	clrc
  3396     00DA  0CF0               	rrf	??_latchDisplay,f
  3397     00DB  3EFF               	addlw	-1
  3398     00DC  1D03               	skipz
  3399     00DD  28D9               	goto	u112_25
  3400     00DE  0870               	movf	??_latchDisplay,w
  3401     00DF  3901               	andlw	1
  3402     00E0  00F1               	movwf	??_latchDisplay+1
  3403     00E1  0DF1               	rlf	??_latchDisplay+1,f
  3404     00E2  0DF1               	rlf	??_latchDisplay+1,f
  3405     00E3  0DF1               	rlf	??_latchDisplay+1,f
  3406     00E4  0807               	movf	7,w	;volatile
  3407     00E5  0671               	xorwf	??_latchDisplay+1,w
  3408     00E6  39F7               	andlw	-9
  3409     00E7  0671               	xorwf	??_latchDisplay+1,w
  3410     00E8  0087               	movwf	7	;volatile
  3411     00E9                     i1l1276:
  3412                           
  3413                           ;./display.h: 76:     PORTCbits.RC7 = (value >> 6) & 0x01;
  3414     00E9  0872               	movf	latchDisplay@value,w
  3415     00EA  00F0               	movwf	??_latchDisplay
  3416     00EB  3006               	movlw	6
  3417     00EC                     u113_25:
  3418     00EC  1003               	clrc
  3419     00ED  0CF0               	rrf	??_latchDisplay,f
  3420     00EE  3EFF               	addlw	-1
  3421     00EF  1D03               	skipz
  3422     00F0  28EC               	goto	u113_25
  3423     00F1  0870               	movf	??_latchDisplay,w
  3424     00F2  3901               	andlw	1
  3425     00F3  00F1               	movwf	??_latchDisplay+1
  3426     00F4  0CF1               	rrf	??_latchDisplay+1,f
  3427     00F5  0CF1               	rrf	??_latchDisplay+1,f
  3428     00F6  0807               	movf	7,w	;volatile
  3429     00F7  0671               	xorwf	??_latchDisplay+1,w
  3430     00F8  397F               	andlw	-129
  3431     00F9  0671               	xorwf	??_latchDisplay+1,w
  3432     00FA  0087               	movwf	7	;volatile
  3433                           
  3434                           ;./display.h: 79:     switch (turn++) {
  3435     00FB  2908               	goto	i1l1282
  3436     00FC                     i1l80:	
  3437                           ;./display.h: 80:         case 0:
  3438                           
  3439                           
  3440                           ;./display.h: 81:             PORTCbits.RC1 = 0;
  3441     00FC  1087               	bcf	7,1	;volatile
  3442                           
  3443                           ;./display.h: 82:             break;
  3444     00FD  2925               	goto	i1l87
  3445     00FE                     i1l82:	
  3446                           ;./display.h: 83:         case 1:
  3447                           
  3448                           
  3449                           ;./display.h: 84:             PORTCbits.RC0 = 0;
  3450     00FE  1007               	bcf	7,0	;volatile
  3451                           
  3452                           ;./display.h: 85:             break;
  3453     00FF  2925               	goto	i1l87
  3454     0100                     i1l83:	
  3455                           ;./display.h: 86:         case 2:
  3456                           
  3457                           
  3458                           ;./display.h: 87:             PORTAbits.RA2 = 0;
  3459     0100  1105               	bcf	5,2	;volatile
  3460                           
  3461                           ;./display.h: 88:             break;
  3462     0101  2925               	goto	i1l87
  3463     0102                     i1l84:	
  3464                           ;./display.h: 89:         case 3:
  3465                           
  3466                           
  3467                           ;./display.h: 90:             PORTAbits.RA1 = 0;
  3468     0102  1085               	bcf	5,1	;volatile
  3469                           
  3470                           ;./display.h: 91:             break;
  3471     0103  2925               	goto	i1l87
  3472     0104                     i1l85:	
  3473                           ;./display.h: 92:         case 4:
  3474                           
  3475                           
  3476                           ;./display.h: 93:             PORTAbits.RA0 = 0;
  3477     0104  1005               	bcf	5,0	;volatile
  3478     0105                     i1l1278:
  3479                           
  3480                           ;./display.h: 94:             turn = 0;
  3481     0105  01D4               	clrf	latchDisplay@turn
  3482     0106  01D5               	clrf	latchDisplay@turn+1
  3483                           
  3484                           ;./display.h: 95:             break;
  3485     0107  2925               	goto	i1l87
  3486     0108                     i1l1282:
  3487     0108  0855               	movf	latchDisplay@turn+1,w
  3488     0109  00F1               	movwf	??_latchDisplay+1
  3489     010A  0854               	movf	latchDisplay@turn,w
  3490     010B  00F0               	movwf	??_latchDisplay
  3491     010C  0AD4               	incf	latchDisplay@turn,f
  3492     010D  1903               	skipnz
  3493     010E  0AD5               	incf	latchDisplay@turn+1,f
  3494                           
  3495                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3496                           ; Switch size 1, requested type "simple"
  3497                           ; Number of cases is 1, Range of values is 0 to 0
  3498                           ; switch strategies available:
  3499                           ; Name         Instructions Cycles
  3500                           ; simple_byte            4     3 (average)
  3501                           ; direct_byte            9     7 (fixed)
  3502                           ; jumptable            260     6 (fixed)
  3503                           ;	Chosen strategy is simple_byte
  3504     010F  0871               	movf	??_latchDisplay+1,w
  3505     0110  3A00               	xorlw	0	; case 0
  3506     0111  1903               	skipnz
  3507     0112  2914               	goto	i1l1538
  3508     0113  2925               	goto	i1l87
  3509     0114                     i1l1538:
  3510                           
  3511                           ; Switch size 1, requested type "simple"
  3512                           ; Number of cases is 5, Range of values is 0 to 4
  3513                           ; switch strategies available:
  3514                           ; Name         Instructions Cycles
  3515                           ; simple_byte           16     9 (average)
  3516                           ; direct_byte           17     7 (fixed)
  3517                           ; jumptable            260     6 (fixed)
  3518                           ;	Chosen strategy is simple_byte
  3519     0114  0870               	movf	??_latchDisplay,w
  3520     0115  3A00               	xorlw	0	; case 0
  3521     0116  1903               	skipnz
  3522     0117  28FC               	goto	i1l80
  3523     0118  3A01               	xorlw	1	; case 1
  3524     0119  1903               	skipnz
  3525     011A  28FE               	goto	i1l82
  3526     011B  3A03               	xorlw	3	; case 2
  3527     011C  1903               	skipnz
  3528     011D  2900               	goto	i1l83
  3529     011E  3A01               	xorlw	1	; case 3
  3530     011F  1903               	skipnz
  3531     0120  2902               	goto	i1l84
  3532     0121  3A07               	xorlw	7	; case 4
  3533     0122  1903               	skipnz
  3534     0123  2904               	goto	i1l85
  3535     0124  2925               	goto	i1l87
  3536     0125                     i1l87:
  3537     0125  0008               	return
  3538     0126                     __end_of_latchDisplay:
  3539     007E                     btemp	set	126	;btemp
  3540     007E                     wtemp0	set	126
  3541                           
  3542                           	psect	idloc
  3543                           
  3544                           ;Config register IDLOC0 @ 0x2000
  3545                           ;	unspecified, using default values
  3546     2000                     	org	8192
  3547     2000  3FFF               	dw	16383
  3548                           
  3549                           ;Config register IDLOC1 @ 0x2001
  3550                           ;	unspecified, using default values
  3551     2001                     	org	8193
  3552     2001  3FFF               	dw	16383
  3553                           
  3554                           ;Config register IDLOC2 @ 0x2002
  3555                           ;	unspecified, using default values
  3556     2002                     	org	8194
  3557     2002  3FFF               	dw	16383
  3558                           
  3559                           ;Config register IDLOC3 @ 0x2003
  3560                           ;	unspecified, using default values
  3561     2003                     	org	8195
  3562     2003  3FFF               	dw	16383
  3563                           
  3564                           	psect	config
  3565                           
  3566                           ;Config register CONFIG @ 0x2007
  3567                           ;	Oscillator Selection bits
  3568                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA4/OSC2/CLKOUT and RA5/OSC1/CLKIN
  3569                           ;	Watchdog Timer Enable bit
  3570                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3571                           ;	Power-up Timer Enable bit
  3572                           ;	PWRTE = OFF, PWRT disabled
  3573                           ;	MCLR Pin Function Select bit
  3574                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
  3575                           ;	Code Protection bit
  3576                           ;	CP = OFF, Program memory code protection is disabled
  3577                           ;	Data Code Protection bit
  3578                           ;	CPD = OFF, Data memory code protection is disabled
  3579                           ;	Brown-out Reset Selection bits
  3580                           ;	BOREN = OFF, BOR disabled
  3581                           ;	Internal External Switchover bit
  3582                           ;	IESO = OFF, Internal External Switchover mode is disabled
  3583                           ;	Fail-Safe Clock Monitor Enabled bit
  3584                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3585     2007                     	org	8199
  3586     2007  30D1               	dw	12497

Data Sizes:
    Strings     0
    Constant    25
    Data        5
    BSS         11
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     46      60
    BANK1            80     18      22
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _setNumberOfSamples->i1___lldiv

Critical Paths under _main in BANK0

    _main->_calculateRPM
    _setDisplay->_calculateRPM
    _checkSelectorToggle->_writeToEEPROM
    _calculateRPM->___lldiv
    ___lldiv->___lmul

Critical Paths under _ISR in BANK0

    _ISR->_setNumberOfSamples

Critical Paths under _main in BANK1

    _main->_setDisplay
    _setDisplay->_calculateRPM
    _calculateRPM->___lldiv

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2449
                                             16 BANK1      2     2      0
                    _CCP1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                       _calculateRPM
                _checkSelectorToggle
                      _initializeIOs
                     _readFromEEPROM
                         _setDisplay
 ---------------------------------------------------------------------------------
 (1) _setDisplay                                           4     2      2    1186
                                             12 BANK1      4     2      2
                            ___lwdiv
                            ___lwmod
                       _calculateRPM (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                             20 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                             20 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _readFromEEPROM                                       7     5      2      45
                                             20 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _initializeIOs                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkSelectorToggle                                  0     0      0     120
                      _writeToEEPROM
 ---------------------------------------------------------------------------------
 (2) _writeToEEPROM                                        3     1      2     120
                                             20 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _calculateRPM                                        11     9      2    1061
                                             42 BANK0      4     2      2
                                              5 BANK1      7     7      0
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     496
                                             20 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     531
                                             33 BANK0      9     1      8
                                              0 BANK1      5     5      0
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                 12    12      0     777
                                              8 BANK0     12    12      0
                       _latchDisplay
                 _setNumberOfSamples
                           i1___lmul
 ---------------------------------------------------------------------------------
 (4) i1___lmul                                            13     5      8     144
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (4) _setNumberOfSamples                                   8     2      6     477
                                              0 BANK0      8     2      6
                          i1___lldiv
 ---------------------------------------------------------------------------------
 (5) i1___lldiv                                           14     6      8     214
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (5) _latchDisplay                                         3     3      0     156
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP1_Initialize
   _TMR0_Initialize
   _TMR1_Initialize
   _calculateRPM
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _checkSelectorToggle
     _writeToEEPROM
   _initializeIOs
   _readFromEEPROM
   _setDisplay
     ___lwdiv
     ___lwmod
     _calculateRPM (ARG)

 _ISR (ROOT)
   _latchDisplay
   _setNumberOfSamples
     i1___lldiv
   i1___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     12      16       5       27.5%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2E      3C       3       75.0%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      60      10        0.0%
ABS                  0      0      60       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Aug 18 00:45:17 2023

                           pc 0002             _selectedIndicator 00B2                            l61 068B  
                          l55 0664                            l64 0673                            l58 0680  
                          l95 02EC                            l98 0634                            fsr 0004  
     __end_of_CCP1_Initialize 0681                           l100 0638                           l101 0639  
                         l104 0653                           l150 05EF                           l119 03F4  
                         l153 035F                           l260 04EC                           l282 0274  
                         l518 0532                           l528 05B4                           u700 0638  
                         _ISR 0126                           u701 0637                           u710 04B3  
                         u711 04B2                           u721 04BC                           u722 04C3  
                         u723 04CA                           u900 0581                           u901 0580  
                         u750 04E4                           u830 04F7                           u751 04E3  
                         u735 04CC                           u831 04F6                           u920 0593  
                         u745 04D4                           u921 0592                           u850 0509  
                         u930 059D                           u851 0508                           u931 059C  
                         u915 0585                           u845 04FB                           u870 051A  
                         u950 05B0                           u871 0519                           u951 05AF  
                         u935 0599                           u865 050A                           u945 05A4  
                         u890 052E                           u891 052D                           u875 0516  
                         u885 0522                           fsr0 0004                           indf 0000  
                        ?_ISR 0070                          l1100 062C                          l1110 04CA  
                        l1102 0633                          l1112 04D3                          l1104 04A5  
                        l1114 04E4                          l1106 04AF                          l1108 04B3  
                        l1220 065E                          l1230 067E                          l1222 0660  
                        l1214 0654                          l1310 0641                          l1150 0501  
                        l1142 04ED                          l1232 067F                          l1224 0674  
                        l1240 0689                          l1320 05B5                          l1216 0658  
                        l1160 0521                          l1152 0505                          l1144 04F1  
                        l1226 067A                          l1242 068A                          l1234 0681  
                        l1250 066D                          l1330 05DA                          l1322 05BB  
                        l1218 065C                          l1162 0528                          l1154 0509  
                        l1146 04F7                          l1170 0581                          l1228 067B  
                        l1236 0684                          l1252 0670                          l1244 0665  
                        l1324 05C0                          l1332 05EB                          l1308 063D  
                        l1156 051A                          l1148 04FA                          l1164 052E  
                        l1180 059D                          l1172 0584                          l1500 03F2  
                        l1238 0688                          l1254 0672                          l1246 0668  
                        l1326 05C1                          l1158 0520                          l1182 05A3  
                        l1174 058B                          l1510 0414                          l1502 03F6  
                        l1248 066A                          l1328 05D6                          l1184 05AA  
                        l1176 058F                          l1168 0579                          l1512 0427  
                        l1504 0407                          l1450 0213                          l1098 0622  
                        l1178 0593                          l1186 05B0                          l1514 0431  
                        l1506 0409                          l1460 024A                          l1452 0219  
                        l1444 01EB                          l1508 040F                          l1516 0439  
                        l1462 0254                          l1454 0227                          l1446 01FF  
                        l1470 0276                          l1456 0239                          l1448 0204  
                        l1464 025C                          l1480 02A6                          l1472 0297  
                        l1458 0247                          l1490 035B                          l1482 02C3  
                        l1474 02A2                          l1484 02E2                          l1468 0275  
                        l1486 02E8                          l1494 03D0                          l1488 02ED  
                        l1496 03DC                          l1498 03EC                          _CCPR 0015  
                        u1160 05BB                          u1161 05BA                          u1410 0219  
                        u1170 05C0                          u1411 0218                          u1171 05BF  
                        u1180 05D6                          u1500 040F                          u1405 0206  
                        u1181 05D5                          u1501 040E                          u1430 0239  
                        u1510 0414                          u1431 0238                          u1511 0413  
                        u1425 021C                          u1185 05D2                          u1450 025C  
                        u1451 025B                          u1435 0235                          u1460 02A2  
                        u1445 024B                          u1461 02A1                          u1390 01FF  
                        u1470 02EC                          u1391 01FE                          u1471 02EB  
                        u1480 03F2                          u1481 03F1                          u1490 0407  
                        u1491 0406                          i1l80 00FC                          i1l82 00FE  
                        i1l83 0100                          i1l84 0102                          i1l85 0104  
                        i1l87 0125                          _TMR0 0001                          _TMR1 000E  
           i1___lldiv@divisor 0070                          _main 03D0                          btemp 007E  
           i1___lldiv@counter 007D                          start 0011         ??_checkSelectorToggle 0037  
               ?_latchDisplay 0070                         ??_ISR 0028       __end_of_TMR0_Initialize 068C  
                       ?_main 0070                         _EEADR 010D                         _ANSEL 011E  
             __end_of___lldiv 0275               __end_of___lwdiv 0533                         i1l132 01C6  
                       i1l142 01DE                         i1l160 03CF                         i1l137 01A2  
                       i1l139 01D4                         i1l260 0578                         i1l158 03B8  
             __end_of___lwmod 05B5                         i1l282 04A4                         _TRISA 0085  
                       _TRISB 0086                         _TRISC 0087                         u96_20 044F  
                       u96_21 044E                         u97_25 0454                         u98_20 0463  
                       u98_21 0462                         u99_25 0465           ___lmul@multiplicand 0038  
          i1___lldiv@dividend 0074       __end_of_TMR1_Initialize 0674              __end_ofi1___lmul 0579  
                       pclath 000A                         status 0003                         wtemp0 007E  
              ??_latchDisplay 0070               __initialization 0013                  __end_of_main 043F  
         i1___lmul@multiplier 0070            i1___lldiv@quotient 0079            readFromEEPROM@data 0038  
       readFromEEPROM@address 003A                        ??_main 004E              ?_CCP1_Initialize 0070  
                      _EEDATA 010C                        _EECON2 018D                        _ANSELH 011F  
                      u100_20 047E                        u100_21 047D                        u100_25 047A  
                      u101_25 048E                        u102_20 049C                        i1l1200 046C  
                      u102_21 049B                        i1l1202 047E                        i1l1210 049C  
                      i1l1204 048C                        u110_25 00B6                        i1l1206 048D  
                      u103_20 0048                        i1l1208 0496                        i1l1400 0138  
                      u103_21 0047                        i1l1410 01BF                        i1l1402 0168  
                      i1l1260 0052                        i1l1340 0396                        i1l1420 01DA  
                      i1l1404 016F                        i1l1412 01C3                        u111_25 00C7  
                      u103_25 0044                        i1l1270 00B3                        i1l1262 005F  
                      i1l1190 043F                        i1l1350 03C0                        i1l1342 039B  
                      i1l1334 0360                        i1l1422 01DD                        i1l1414 01CA  
                      i1l1406 01B8                        i1l1272 00C4                        i1l1264 0089  
                      u104_20 0068                        i1l1256 0039                        i1l1192 044F  
                      i1l1344 03AF                        u120_20 03AF                        i1l1336 0380  
                      i1l1360 0556                        i1l1416 01D0                        i1l1408 01BC  
                      u104_21 0064                        u120_21 03AE                        i1l1282 0108  
                      i1l1274 00D6                        i1l1266 0092                        i1l1258 0048  
                      i1l1194 0452                        i1l1346 03B3                        i1l1338 0392  
                      i1l1362 055F                        i1l1354 0533                        i1l1418 01D8  
                      u120_23 03AB                        i1l1276 00E9                        i1l1268 00A0  
                      i1l1196 045F                        i1l1348 03BC                        i1l1364 0570  
                      i1l1356 053B                        u112_25 00D9                        i1l1278 0105  
                      i1l1198 0463                        i1l1358 053F                        u105_20 0072  
                      u121_20 03CE                        i1l1392 0126                        u105_21 006E  
                      u121_21 03CC                        i1l1538 0114                        i1l1394 012A  
                      u105_24 006B                        i1l1396 0130                        u113_25 00EC  
                      u121_25 03C9                        i1l1398 0134                        u106_20 007C  
                      u122_20 03CF                        u106_21 0078                        u106_24 0075  
                      u107_20 0086                        u123_20 053F                        u107_21 0082  
                      u123_21 053E                        u107_24 007F                        u132_20 012A  
                      u124_21 0548                        u132_21 0129                        u124_22 054F  
                      u124_23 0556                        u108_24 0089                        u133_20 0130  
                      u133_21 012F                        u109_25 00A3                        u125_25 0558  
                      u134_21 0153                        u134_22 0154                        u134_23 0159  
                      u134_24 015A                        u126_25 0560                        u134_25 015F  
                      u134_26 0160                        u119_20 0392                        u127_20 0570  
                      u135_20 016F                        u119_21 0391                        u127_21 056F  
                      u135_21 016E                        u119_23 038E                        u136_21 0194  
                      u136_22 019B                        u136_23 01A2                        u137_20 01CA  
                      u137_21 01C9                        u138_20 01D8                        u138_21 01D7  
                      _TMR1IF 0060             writeToEEPROM@data 0034            _setNumberOfSamples 0360  
                      ___lmul 04A5                     ??___lldiv 0049                        _digits 0610  
                   ??___lwdiv 0038                     ??___lwmod 0038           ?_setNumberOfSamples 0020  
            ?_TMR0_Initialize 0070                        _period 004E               _numberOfSamples 005B  
           __end_ofi1___lldiv 04A5                  _calculateRPM 02ED                        saved_w 007E  
        ??_setNumberOfSamples 0026              ?_TMR1_Initialize 0070       __end_of__initialization 0036  
              __pcstackCOMMON 0070                  __pidataBANK0 068C     setNumberOfSamples@samples 0024  
                   ?i1___lmul 0070                main@delayCount 00B0               setDisplay@value 00AC  
              _OPTION_REGbits 0081          __end_of_latchDisplay 0126                    __pbssBANK0 004E  
                  __pbssBANK1 00B4                   setDisplay@i 00AE                    __pmaintext 03D0  
               _initializeIOs 0654                       ?___lmul 0034                 _writeToEEPROM 061F  
                  __pintentry 0004      setNumberOfSamples@period 0020                ___lmul@product 003D  
                  ??i1___lmul 0078                    __stringtab 0600   __end_of_checkSelectorToggle 05F0  
            latchDisplay@turn 0054                    _indicators 061A                ?_initializeIOs 0070  
              ?_writeToEEPROM 0034                       ___lldiv 01EB                       ___lwdiv 04ED  
                     ___lwmod 0579                       __ptext1 0275                       __ptext2 0579  
                     __ptext3 04ED                       __ptext4 063A                       __ptext5 0654  
                     __ptext6 05B5                       __ptext7 061F                       __ptext8 02ED  
                     __ptext9 04A5                       _display 0057                     _T1CONbits 0010  
                  _setDisplay 0275          end_of_initialization 0036               ___lldiv@divisor 0041  
             ___lldiv@counter 00A4  checkSelectorToggle@lastState 0056                _readFromEEPROM 063A  
                   _PORTAbits 0005                     _PORTBbits 0006                     _PORTCbits 0007  
                   i1___lldiv 043F                   _CCP1CONbits 0017               ??_initializeIOs 0034  
             ??_writeToEEPROM 0036                  _latchDisplay 0039        __end_of_readFromEEPROM 0654  
              __end_of___lmul 04ED          writeToEEPROM@address 0036                __end_of_digits 061A  
       i1___lmul@multiplicand 0074           start_initialization 0013                   __end_of_ISR 01EB  
                  ?i1___lldiv 0070                   ?_setDisplay 00AC                _PULSES_PER_REV 0606  
                    ??___lmul 003C               ?_readFromEEPROM 0034                   __pdataBANK0 0057  
                   ___latbits 0001                 __pcstackBANK0 0020                 __pcstackBANK1 00A0  
            i1___lmul@product 0079             ??_CCP1_Initialize 0034        __end_of_PULSES_PER_REV 0610  
                   __pnvBANK1 00B2              ___lwdiv@dividend 0036                      ?___lldiv 0041  
                    ?___lwdiv 0034                      ?___lwmod 0034                     __pstrings 0600  
                 ??i1___lldiv 0078              ___lwdiv@quotient 0039               calculateRPM@rpm 004C  
           ??_TMR0_Initialize 0034             interrupt_function 0004                      _PIE1bits 008C  
                    _PIR1bits 000C             ISR@initialCapture 0052             ??_TMR1_Initialize 0034  
                    i1___lmul 0533                   __stringbase 0605                 ?_calculateRPM 004A  
           latchDisplay@value 0072             ___lmul@multiplier 0034                    _EECON1bits 018C  
          __end_of__stringtab 0606                ??_calculateRPM 00A5               ___lwdiv@divisor 0034  
          __end_of_indicators 061F               ___lwdiv@counter 003B                      __ptext10 01EB  
                    __ptext11 0665                      __ptext12 0681                      __ptext13 0674  
                    __ptext14 0126                      __ptext15 0533                      __ptext16 0360  
                    __ptext17 043F                      __ptext18 0039                  ??_setDisplay 004E  
            ??_readFromEEPROM 0036         __end_of_initializeIOs 0665         __end_of_writeToEEPROM 063A  
          __end_of_setDisplay 02ED                _overflow_count 00B5                    _INTCONbits 000B  
             _CCP1_Initialize 0674    __end_of_setNumberOfSamples 03D0                      intlevel1 0000  
            ___lwmod@dividend 0036              ___lldiv@dividend 0045                     stringcode 0600  
                  _OSCCONbits 008F                  _shouldUpdate 00B4              ___lldiv@quotient 00A0  
             ___lwmod@divisor 0034               _TMR0_Initialize 0681               ___lwmod@counter 0039  
                    stringdir 0600                      stringtab 0600           _checkSelectorToggle 05B5  
        __end_of_calculateRPM 0360               _TMR1_Initialize 0665          ?_checkSelectorToggle 0070  
